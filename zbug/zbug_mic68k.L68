00A00BB4 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 2017/10/28 17:39:12

00000000                             1  ; FILE NAME MIC68KMON.x68
00000000                             2  ; zBug V1.0 for MIC68K by @kanpapa
00000000                             3  ; The source code was assembled using Easy68K 
00000000                             4  
00000000                             5  ;
00000000                             6  ; Original FILE NAME U68K.ASM 
00000000                             7  ; 
00000000                             8  ; zBug V1.0 is a small monitor program for 68000-Based Single Board Computer
00000000                             9  ; The source code was assembled using C32 CROSS ASSEMBLER VERSION 3.0
00000000                            10  ;
00000000                            11  
00000000                            12  ; Copyright (c) 2002 WICHIT SIRICHOTE email kswichit@kmitl.ac.th
00000000                            13  ; 
00000000                            14  ;
00000000                            15  ; This program is free software; you can redistribute it and/or modify
00000000                            16  ; it under the terms of the GNU General Public License as published by
00000000                            17  ; the Free Software Foundation; either version 2 of the License, or
00000000                            18  ; (at your option) any later version.
00000000                            19  ;
00000000                            20  ; This program is distributed in the hope that it will be useful,
00000000                            21  ; but WITHOUT ANY WARRANTY; without even the implied warranty of
00000000                            22  ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
00000000                            23  ; GNU General Public License for more details.
00000000                            24  ;
00000000                            25  ;
00000000                            26  ;
00000000                            27  
00000000                            28  ;   CPU     "68000.TBL"      ; CPU TABLE
00000000                            29  ;   HOF     "BIN16"          ; HEX OUTPUT FORMAT
00000000                            30  ;   HOF     "MOT16"          ; OUTPUT MOTOROLA S-RECORD
00000000                            31  
00000000                            32  ;
00000000                            33  ; MIC68K MEMORY MAP
00000000                            34  ;
00000000                            35  ; 000000-00FFFF RAM 32Kx2
00000000                            36  ; 010000-9FFFFF -
00000000                            37  ; A00000-A0FFFF ROM 32Kx2
00000000                            38  ; A10000-DFFFFF -
00000000                            39  ; F00009        ACIA1 63B50 (IC6)
00000000                            40  ; F20009        ACIA2 63B50 (IC7)
00000000                            41  ; F40009        PIA (IC1)
00000000                            42  ; F80009        PTM (IC2)
00000000                            43  ;
00000000                            44  
00000000  =00000000                 45  BIT_ESC      EQU 0              ; ESC BIT POSITION #0
00000000                            46  
00000000                            47  ;DCODE68K  EQU $400              ; DISASSEMBLER START ADDRESS (option)
00000000                            48  
00000000  =00000000                 49  RAM      EQU $000000            ; RAM START ADDRESS
00000000                            50  
00000000                            51  ;
00000000                            52  ; MONITOR MEMORY MAP
00000000                            53  ; $000000-$0003FF M68000 Exception Vector Table
00000000                            54  ; $00E000         SUPER_STACK/RAMBASE
00000000                            55  ; $00FFFF         RAM END
00000000                            56  ;
00000000                            57  ; $A00000         RESET Vector
00000000                            58  ; $A00008         MAIN(Monitor start)
00000000                            59  ;
00000000                            60  
00000000                            61  ;DIN      EQU $300001 
00000000                            62  ;DOUT     EQU $700001       
00000000                            63  
00000000  =00F00009                 64  ACIAC    EQU $F00009
00000000  =00F0000B                 65  ACIAD    EQU ACIAC+2
00000000                            66  ;PIT      EQU $700001
00000000                            67  
00000000  =00002000                 68  INT_ON   EQU  $2000    ; BOTH, SET SUPERVISOR MODE, S=1
00000000  =00002700                 69  INT_OFF  EQU  $2700
00000000                            70  
00000000  =00000000                 71  RDRF    EQU 0           ; ACIAC Receive Data Register Full
00000000  =00000001                 72  TDRE    EQU 1           ; ACIAC Transmit Data Register Empty
00000000                            73  
00000000  =00000005                 74  SUPERVISOR_BIT EQU 5
00000000                            75  
00000000  =00000007                 76  TRACE_BIT EQU 7
00000000                            77  
00000000  =0000000D                 78  CR      EQU 13
00000000  =0000000A                 79  LF      EQU 10
00000000  =00000020                 80  SP      EQU 32
00000000  =00000008                 81  BS      EQU 8
00000000  =0000001E                 82  RS      EQU $1E
00000000  =0000001B                 83  ESC     EQU $1B
00000000                            84  
00000000  =0000E000                 85  SUPER_STACK   EQU $00E000   ; SUPER STACK TOP Address
00000000  =0000E000                 86  RAMBASE_INIT  EQU $00E000
00000000                            87  
00000000                            88  ;
00000000                            89  ; EXCEPTION VECTOR address
00000000                            90  ;
00000000  =00000080                 91  TRAP0   EQU RAM+$80
00000000  =00000084                 92  TRAP1   EQU TRAP0+4
00000000  =00000088                 93  TRAP2   EQU TRAP1+4
00000000  =0000008C                 94  TRAP3   EQU TRAP2+4
00000000  =00000090                 95  TRAP4   EQU TRAP3+4
00000000  =00000094                 96  TRAP5   EQU TRAP4+4
00000000  =00000098                 97  TRAP6   EQU TRAP5+4
00000000  =0000009C                 98  TRAP7   EQU TRAP6+4
00000000  =000000A0                 99  TRAP8   EQU TRAP7+4
00000000  =000000A4                100  TRAP9   EQU TRAP8+4
00000000  =000000A8                101  TRAP10  EQU TRAP9+4
00000000  =000000AC                102  TRAP11  EQU TRAP10+4
00000000  =000000B0                103  TRAP12  EQU TRAP11+4
00000000  =000000B4                104  TRAP13  EQU TRAP12+4
00000000  =000000B8                105  TRAP14  EQU TRAP13+4
00000000  =000000BC                106  TRAP15  EQU TRAP14+4
00000000                           107  
00000000  =00000008                108  BUS_ERROR EQU RAM+8
00000000  =0000000C                109  ADDRESS_ERROR EQU RAM+$C
00000000  =00000010                110  ILLEGAL_INSTRUCTION EQU RAM+$10
00000000                           111  
000000C0                           112     ORG $C0
000000C0                           113  ;RAMBASE  DC.L   $130000   ; RAM BASE ADDRESS
000000C0                           114  RAMBASE  DS.L   1          ; RAM BASE ADDRESS
000000C4                           115  
000000C4                           116  ;
000000C4                           117  ; ROM START
000000C4                           118  ;
00A00000                           119     ORG $A00000
00A00000                           120     ; Reset start vector
00A00000= 0000E000                 121     DC.L SUPER_STACK        ; TOP OF SUPERVISOR STACK $130000
00A00004= 00A00BB4                 122     DC.L MAIN               ; MONITOR START
00A00008                           123  
00A00008                           124  ;   DC.L BUS_ERROR
00A00008                           125  ;   DC.L ADDRESS_ERROR
00A00008                           126  ;   DC.L ILLEGAL_INSTRUCTION
00A00008                           127  
00A00008                           128  ;   ORG $24
00A00008                           129  ;   DC.L SERVICE_TRAP0      ; TRACE THE SAME AS TRAP #0 
00A00008                           130  
00A00008                           131  ;   ORG $80
00A00008                           132  ;   DC.L SERVICE_TRAP0      ; TRAP #0
00A00008                           133  
00A00008                           134  ;   ORG $C0
00A00008                           135  ;RAMBASE  DC.L   $130000     ; RAM BASE ADDRESS
00A00008                           136  
00A00008                           137  
00A00008                           138  ; RESERVED SPACE FOR FILE DECODE68K DISASSEMBLER
00A00008                           139  ; RAM+$400 TO RAM+10E0
00A00008                           140  ; THE DISASSEMBLER MUST BE LOADED BEFORE USING 
00A00008                           141  
00A00008                           142  ;   ORG $400
00A00008                           143  ;  INCL "DIS.IMG"
00A00008                           144  ;  INCLUDE "dis_mic68k.x68"
00A00008                           145  
00A00008                           146  ;-------------------------------------------------------------------------
00A00008                           147  ; File DCODE68K  68K ONE LINE DISASSEMBLER                        07/28/82
00A00008                           148  
00A00008                           149  ;        CALLING SEQUENCE:
00A00008                           150  ;   D0,D1,D2 = CODE TO BE DISASSEMBLED
00A00008                           151  ;   A4 = VALUE OF PROGRAM COUNTER FOR THE CODE
00A00008                           152  ;   A5 = POINTER TO STORE DATA (BUFSIZE = 80 ASSUMED)
00A00008                           153  ;        JSR       DCODE68K
00A00008                           154  
00A00008                           155  ;        RETURN:
00A00008                           156  ;   A4 = VALUE OF PROGRAM COUNTER FOR NEXT INSTRUCTION
00A00008                           157  ;   A5 = POINTER TO LINE AS DISASSEMBLED
00A00008                           158  ;   A6 = POINTER TO END OF LINE
00A00008                           159  ;
00A00008                           160  ; 01234567890123456789012345678901234567890123456789
00A00008                           161  ; AAAAAA FDATA.DDDDDDDDDDDDDD FOC.... FOP.....
00A00008                           162  
00A00008                           163  ;                ORG $400
00A00008                           164  
00A00008  =0000000A                165  FDATA   EQU    10             ;OFFSET TO DATA
00A00008  =0000001F                166  FOC     EQU    31             ;OFFSET TO OP-CODE (NO LABEL FIELD)
00A00008  =00000027                167  FOP     EQU    39             ;OFFSET TO OPERAND (NO LABEL FIELD)
00A00008                           168  
00A00008  =00000020                169  BLANK    EQU   $20
00A00008  =00000050                170  BUFSIZE  EQU   80
00A00008  =00000010                171  LOCVARSZ EQU   16
00A00008  =00000004                172  EOT      EQU   $04
00A00008                           173  
00A00008                           174  ; CAUSES ORGIN MODULO 4
00A00008                           175  LONG     MACRO
00A00008                           176           DS      0
00A00008                           177           DS.B    (*-X)&2
00A00008                           178           ENDM
00A00008                           179  
00A00008                           180  
00A00008                           181  X        DS      0              BASE ADDRESS THIS MODULE
00A00008                           182m          LONG
00A00008                           183  
00A00008                           184  *  MOVEM REGISTERS TO EA
00A00008                           185  *
00A00008                           186  *        01001D001S......
00A00008                           187  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A00008                           188  *        .........0......       WORD
00A00008                           189  *        .........1......       LONG
00A00008                           190  *        .....0..........       REGISTER TO MEMORY
00A00008                           191  *        .....1..........       MEMORY TO REGISTER
00A00008                           192  *
00A00008                           193  
00A00008                           194  IMOVEMFR DS      0
00A00008  6100 071E                195           BSR     MOVEMS         SIZE
00A0000C                           196  
00A0000C  7C38                     197           MOVEQ   #$0038,D6
00A0000E  CC54                     198           AND.W   (A4),D6
00A00010  0C46 0020                199           CMPI.W  #$0020,D6
00A00014  6706                     200           BEQ.S   IM7788         PREDECREMENT MODE
00A00016                           201  
00A00016  7C01                     202           MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
00A00018  7200                     203           MOVEQ   #0,D1          D1 = BIT POSITION
00A0001A  6004                     204           BRA.S   IM7799
00A0001C                           205  
00A0001C  7CFF                     206  IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
00A0001E  720F                     207           MOVEQ   #15,D1         D1 = BIT POSITION
00A00020  6100 071A                208  IM7799   BSR     MOVEMR         BUILD MASK WORD
00A00024                           209  
00A00024  1CFC 002C                210           MOVE.B  #',',(A6)+     STORE COMMA
00A00028                           211  
00A00028  5483                     212           ADDQ.L  #2,D3
00A0002A  3814                     213           MOVE.W  (A4),D4
00A0002C  3E3C 01F4                214           MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
00A00030  6100 0534                215           BSR     EEA
00A00034  601C                     216           BRA.S   CS16           COMMON
00A00036                           217  
00A00036                           218m          LONG
00A00038                           219  * MOVEM  EA  TO REGISTERS
00A00038                           220  *
00A00038  6100 06EE                221  IMOVEMTR BSR     MOVEMS         SIZE
00A0003C  5483                     222           ADDQ.L  #2,D3
00A0003E  3E3C 07EC                223           MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
00A00042  6100 0522                224           BSR     EEA
00A00046                           225  
00A00046  1CFC 002C                226           MOVE.B  #',',(A6)+     STORE COMMA
00A0004A                           227  
00A0004A  7C01                     228           MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
00A0004C  7200                     229           MOVEQ   #0,D1          D1 = BIT POSITION
00A0004E  6100 06EC                230           BSR     MOVEMR
00A00052                           231  
00A00052  606C                     232  CS16     BRA.S   CS15           COMMON
00A00054                           233  
00A00054                           234  
00A00054                           235m          LONG
00A00054                           236  ISTOP    DS      0
00A00054  302C 0002                237           MOVE.W  2(A4),D0
00A00058  1CFC 0023                238           MOVE.B  #'#',(A6)+     IMMEDIATE
00A0005C  1CFC 0024                239           MOVE.B  #'$',(A6)+     HEX
00A00060  6100 1194                240           BSR     PNT4HX         VALUE
00A00064  6000 07EE                241           BRA     COMMON4
00A00068                           242  
00A00068                           243m          LONG
00A00068                           244  IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
00A00068  6100 0472                245           BSR     FORMSIZE
00A0006C  5483                     246           ADDQ.L  #2,D3          SIZE = 4
00A0006E  1CFC 0023                247           MOVE.B  #'#',(A6)+     IMMEDIATE
00A00072                           248  
00A00072  4280                     249           CLR.L   D0
00A00074  302C 0002                250           MOVE.W  2(A4),D0       D0 = EXTENSION WORD
00A00078  3214                     251           MOVE.W  (A4),D1
00A0007A  EC49                     252           LSR.W   #6,D1
00A0007C  0241 0003                253           ANDI.W  #3,D1
00A00080  6746                     254           BEQ.S   IMMED65        .BYTE
00A00082                           255  
00A00082  0C01 0001                256           CMPI.B  #1,D1
00A00086  6750                     257           BEQ.S   IMMED75        .WORD
00A00088                           258  
00A00088  5483                     259           ADDQ.L  #2,D3          .LONG    SIZE = 6
00A0008A  202C 0002                260           MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
00A0008E                           261  
00A0008E  6100 10F0                262  IMMED45  BSR     HEX2DEC        DECIMAL
00A00092                           263  
00A00092  1CC5                     264           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00094                           265  
00A00094  3014                     266           MOVE    (A4),D0
00A00096  0240 003F                267           ANDI.W  #$003F,D0
00A0009A  0C40 003C                268           CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
00A0009E  6622                     269           BNE.S   IMMED55        NOT FOUND
00A000A0                           270  
00A000A0  3014                     271           MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
00A000A2  0240 4000                272           ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
00A000A6  6600 07D6                273           BNE     FERROR         0600   0400  0C00
00A000AA                           274  
00A000AA  3214                     275           MOVE.W  (A4),D1
00A000AC  0241 00C0                276           ANDI.W  #$00C0,D1
00A000B0  0C41 0080                277           CMPI.W  #$0080,D1
00A000B4  6700 07C8                278           BEQ     FERROR         .LONG NOT ALLOWED
00A000B8                           279  
00A000B8  1CFC 0053                280           MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
00A000BC  1CFC 0052                281           MOVE.B  #'R',(A6)+
00A000C0  603E                     282  CS15     BRA.S   CS14           COMMON
00A000C2                           283  
00A000C2  6100 04A2                284  IMMED55  BSR     EEA
00A000C6  6038                     285           BRA.S   CS14           COMMON
00A000C8                           286  
00A000C8  2200                     287  IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
00A000CA  E049                     288           LSR.W   #8,D1          D1 = 00000000XXXXXXXX
00A000CC  670A                     289           BEQ.S   IMMED75
00A000CE  2200                     290           MOVE.L  D0,D1
00A000D0  EE41                     291           ASR.W   #7,D1
00A000D2  5241                     292           ADDQ.W  #1,D1          CHECK FOR NEGATIVE
00A000D4  6600 07A8                293           BNE     FERROR
00A000D8                           294  
00A000D8  48C0                     295  IMMED75  EXT.L   D0
00A000DA  60B2                     296           BRA     IMMED45
00A000DC                           297  
00A000DC                           298  *  BIT   5432109876543210
00A000DC                           299  *        ....RRRMMM......       DESTINATION REGISTER MODE
00A000DC                           300  *        ..........MMMRRR       SOURCE MODE REGISTER
00A000DC                           301  *        0001............       .BYTE
00A000DC                           302  *        0011............       .WORD
00A000DC                           303  *        0010............       .LONG
00A000DC                           304  *
00A000DC                           305  * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
00A000DC                           306m          LONG
00A000DC                           307  IMOVE    DS      0
00A000DC  6000 03A2                308           BRA     IMOVEA1
00A000E0                           309  
00A000E0                           310m          LONG
00A000E0                           311  ILINK    DS      0
00A000E0  615E                     312           BSR.S   FORMREGA
00A000E2                           313  
00A000E2  1CC5                     314           MOVE.B  D5,(A6)+       COMMA SERARATOR
00A000E4                           315  
00A000E4  1CFC 0023                316           MOVE.B  #'#',(A6)+
00A000E8  302C 0002                317           MOVE.W  2(A4),D0
00A000EC  48C0                     318           EXT.L   D0
00A000EE  6100 1090                319           BSR     HEX2DEC        DECIMAL DISPLACEMENT
00A000F2  6000 0760                320           BRA     COMMON4
00A000F6                           321  
00A000F6                           322m          LONG
00A000F8                           323  FORM1    DS      0              CLR  NEG  NEGX  NOT TST
00A000F8  6100 03E2                324           BSR.L   FORMSIZE
00A000FC                           325  
00A000FC                           326  
00A000FC                           327  *                               NBCD TAS
00A000FC  6100 0468                328  FORM1A   BSR     EEA            DATA ALTERABLE ONLY
00A00100  606E                     329  CS14     BRA.S   CS13           COMMON
00A00102                           330  
00A00102                           331m          LONG
00A00104                           332  FORM3    DS      0              EXT  SWAP
00A00104  614A                     333           BSR.S   FORMREGD
00A00106  6068                     334           BRA.S   CS13           COMMON
00A00108                           335  
00A00108                           336m          LONG
00A00108                           337  FORM4    DS      0              TRAP
00A00108  1CFC 0023                338           MOVE.B  #'#',(A6)+
00A0010C  3014                     339           MOVE.W  (A4),D0
00A0010E  0280 0000000F            340           ANDI.L  #$0F,D0
00A00114  6100 106A                341           BSR     HEX2DEC        DECIMAL
00A00118  6056                     342           BRA.S   CS13           COMMON
00A0011A                           343  
00A0011A                           344m          LONG
00A0011C                           345  FORM5    DS      0              UNLNK
00A0011C  6122                     346           BSR.S   FORMREGA
00A0011E  6050                     347           BRA.S   CS13           COMMON
00A00120                           348  
00A00120                           349  *  BIT   5432109876543210
00A00120                           350  *        ....RRR.........       ADDRESS REGISTER
00A00120                           351  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A00120                           352  *
00A00120                           353m          LONG
00A00120                           354  FORM6A   DS      0              LEA
00A00120  3E3C 07E4                355           MOVE.W  #$7E4,D7       CONTROL ADDRESSING
00A00124  6154                     356           BSR.S   EEA10
00A00126                           357  
00A00126  1CC5                     358           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00128                           359  
00A00128  3814                     360           MOVE.W  (A4),D4
00A0012A  EF5C                     361           ROL.W   #7,D4
00A0012C  6112                     362           BSR.S   FORMREGA
00A0012E  6040                     363           BRA.S   CS13           COMMON
00A00130                           364  
00A00130                           365  *  BIT   5432109876543210
00A00130                           366  *        ....DDD.........       DATA REGISTER
00A00130                           367  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A00130                           368  *
00A00130                           369m          LONG
00A00130                           370  FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
00A00130  3E3C 0FFD                371           MOVE.W  #$FFD,D7       DATA ADDRESSING
00A00134  6144                     372           BSR.S   EEA10
00A00136                           373  
00A00136  1CC5                     374           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00138                           375  
00A00138  3814                     376           MOVE.W  (A4),D4
00A0013A  EF5C                     377           ROL.W   #7,D4
00A0013C  6112                     378           BSR.S   FORMREGD
00A0013E  6030                     379           BRA.S   CS13           COMMON
00A00140                           380  
00A00140  1CFC 0041                381  FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
00A00144  0204 0007                382  FORMREG5 ANDI.B  #$07,D4
00A00148  0004 0030                383           ORI.B   #'0',D4
00A0014C  1CC4                     384           MOVE.B  D4,(A6)+
00A0014E  4E75                     385           RTS
00A00150                           386  
00A00150  1CFC 0044                387  FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
00A00154  60EE                     388           BRA     FORMREG5
00A00156                           389  
00A00156                           390  *  BIT   5432109876543210
00A00156                           391  *        ....DDD......DDD       DATA REGISTERS
00A00156                           392  *
00A00156                           393m          LONG
00A00158                           394  FORM7    DS      0              EXG
00A00158  EF5C                     395           ROL.W   #7,D4
00A0015A  61F4                     396           BSR     FORMREGD
00A0015C                           397  
00A0015C  1CC5                     398           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A0015E                           399  
00A0015E  3814                     400           MOVE.W  (A4),D4
00A00160  61EE                     401           BSR     FORMREGD
00A00162  600C                     402           BRA.S   CS13           COMMON
00A00164                           403  
00A00164                           404  *  BIT   5432109876543210
00A00164                           405  *        ....AAA......AAA       ADDRESS REGISTERS
00A00164                           406  *
00A00164                           407m          LONG
00A00164                           408  FORM8    DS      0              EXG
00A00164  EF5C                     409           ROL.W   #7,D4
00A00166  61D8                     410           BSR     FORMREGA
00A00168                           411  
00A00168  1CFC 002C                412  FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
00A0016C                           413  
00A0016C  3814                     414           MOVE.W  (A4),D4
00A0016E  61D0                     415           BSR     FORMREGA
00A00170  6000 0080                416  CS13     BRA     CS12           COMMON
00A00174                           417  
00A00174                           418  *  BIT   5432109876543210
00A00174                           419  *        ....DDD.........       DATA REGISTER
00A00174                           420  *        .............AAA       ADDRESS REGISTER
00A00174                           421  *
00A00174                           422m          LONG
00A00174                           423  FORM9    DS      0              EXG
00A00174  EF5C                     424           ROL.W   #7,D4
00A00176  61D8                     425           BSR     FORMREGD       DATA REGISTER
00A00178  60EE                     426           BRA     FORM815
00A0017A                           427  
00A0017A  6000 03EA                428  EEA10    BRA     EEA
00A0017E                           429  
00A0017E                           430  *  BIT   5432109876543210
00A0017E                           431  *        ..........AAAAAA         EFFECTIVE ADDRESS
00A0017E                           432  *        .......MMM......         OP-MODE
00A0017E                           433  *        ....RRR.........         D-REGISTER
00A0017E                           434  *        .......011......         WORD  EA,A@
00A0017E                           435  *        .......111......         LONG  EA,A@
00A0017E                           436  *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
00A0017E                           437  *        .......0........         EA,D@
00A0017E                           438  *        .......1........         D@,EA
00A0017E                           439  *        ........00......         BYTE
00A0017E                           440  *        ........01......         WORD
00A0017E                           441  *        ........10......         LONG
00A0017E                           442  *
00A0017E                           443m          LONG
00A00180                           444  *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
00A00180                           445  FORM10EX DS      0              ADD  CMP  SUB
00A00180  3E3C 0FFF                446           MOVE.W  #$FFF,D7       ALL MODES ALLOWED
00A00184  2004                     447           MOVE.L  D4,D0
00A00186  0240 01C0                448           ANDI.W  #$01C0,D0
00A0018A  673A                     449           BEQ.S   FORM103        .......000......
00A0018C  0C40 01C0                450           CMPI.W  #$01C0,D0
00A00190  6710                     451           BEQ.S   FORM10E3       .......111......
00A00192  0C40 00C0                452           CMPI.W  #$00C0,D0
00A00196  661E                     453           BNE.S   FORM10E6
00A00198                           454  
00A00198  1AFC 002E                455           MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
00A0019C  1AFC 0057                456           MOVE.B  #'W',(A5)+
00A001A0  6008                     457           BRA.S   FORM10E4
00A001A2                           458  
00A001A2  1AFC 002E                459  FORM10E3 MOVE.B  #'.',(A5)+
00A001A6  1AFC 004C                460           MOVE.B  #'L',(A5)+
00A001AA                           461  
00A001AA  61CE                     462  FORM10E4 BSR     EEA10
00A001AC                           463  
00A001AC  1CC5                     464           MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
00A001AE                           465  
00A001AE  3814                     466           MOVE.W  (A4),D4
00A001B0  EF5C                     467           ROL.W   #7,D4
00A001B2  618C                     468           BSR     FORMREGA       <EA>,A@
00A001B4  603C                     469           BRA.S   CS12           COMMON
00A001B6                           470  
00A001B6  0814 0000                471  FORM10E6 BTST.B  #0,(A4)
00A001BA  6620                     472           BNE.S   FORM105        .......1........    D@,<EA>
00A001BC  600C                     473           BRA.S   FORM104        .......0........    <EA>,D@
00A001BE                           474  
00A001BE                           475  *  BIT   5432109876543210
00A001BE                           476  *        ..........AAAAAA       EFFECTIVE ADDRESS
00A001BE                           477  *        .......MMM......       OP-MODE
00A001BE                           478  *        ....RRR.........       D-REGISTER
00A001BE                           479  *        .......0........       EA,D@
00A001BE                           480  *        .......1........       D@,EA
00A001BE                           481  *        ........00......       BYTE
00A001BE                           482  *        ........01......       WORD
00A001BE                           483  *        ........10......       LONG
00A001BE                           484m          LONG
00A001C0                           485  FORM10   DS      0              AND  EOR  OR
00A001C0  0814 0000                486           BTST.B  #0,(A4)
00A001C4  6616                     487           BNE.S   FORM105
00A001C6                           488  
00A001C6  3E3C 0FFD                489  FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
00A001CA  6100 0310                490  FORM104  BSR     FORMSIZE
00A001CE  61AA                     491           BSR     EEA10          <EA>,D@
00A001D0                           492  
00A001D0  1CC5                     493           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A001D2                           494  
00A001D2  1814                     495           MOVE.B  (A4),D4
00A001D4  E20C                     496           LSR.B   #1,D4
00A001D6  6100 FF78                497           BSR     FORMREGD
00A001DA  6016                     498           BRA.S   CS12           COMMON
00A001DC                           499  
00A001DC  6100 02FE                500  FORM105  BSR     FORMSIZE       D@,<EA>
00A001E0  1814                     501           MOVE.B  (A4),D4
00A001E2  E20C                     502           LSR.B   #1,D4
00A001E4  6100 FF6A                503           BSR     FORMREGD
00A001E8                           504  
00A001E8  1CC5                     505           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A001EA                           506  
00A001EA  3814                     507           MOVE.W  (A4),D4
00A001EC  3E3C 01FD                508           MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
00A001F0  6188                     509           BSR     EEA10
00A001F2  6000 0662                510  CS12     BRA     COMMON
00A001F6                           511  
00A001F6                           512m          LONG
00A001F8                           513  *                               PEA     (JMP  JSR)
00A001F8  3E3C 07E4                514  FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
00A001FC  6100 FF7C                515           BSR     EEA10
00A00200  60F0                     516           BRA     CS12           COMMON
00A00202                           517  
00A00202                           518m          LONG
00A00204                           519  *                               JMP  JSR
00A00204  2004                     520  FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
00A00206  0240 003F                521           ANDI.W  #$3F,D0
00A0020A  0C40 0038                522           CMPI.W  #$38,D0
00A0020E  6608                     523           BNE.S   FORM112        NOT .S
00A00210  1AFC 002E                524           MOVE.B  #'.',(A5)+     PERIOD
00A00214  1AFC 0053                525           MOVE.B  #'S',(A5)+     S
00A00218  0C40 0039                526  FORM112  CMPI.W  #$39,D0
00A0021C  6608                     527           BNE.S   FORM114
00A0021E  1AFC 002E                528           MOVE.B  #'.',(A5)+     PERIOD
00A00222  1AFC 004C                529           MOVE.B  #'L',(A5)+     L
00A00226  60D0                     530  FORM114  BRA     FORM11
00A00228                           531  
00A00228                           532  *  BIT   5432109876543210
00A00228                           533  *        ....XXX.....0...       DATA DESTINATION REGISTER
00A00228                           534  *        ....XXX.....1...       ADDRESS REGISTER
00A00228                           535  *        ....XXX.00......       BYTE
00A00228                           536  *        ........01......       WORD
00A00228                           537  *        ........10......       LONG
00A00228                           538  *        ............0...       DATA REGISTER TO DATA REGISTER
00A00228                           539  *        ............1...       MEMORY TO MEMORY
00A00228                           540  *        ............0XXX       DATA SOURCE REGISTER
00A00228                           541  *        ............1XXX       ADDRESS SOURCE REGISTER
00A00228                           542  *
00A00228                           543m          LONG
00A00228                           544  FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
00A00228  6100 02B2                545           BSR     FORMSIZE
00A0022C                           546  
00A0022C  0804 0003                547           BTST    #3,D4
00A00230  6610                     548           BNE.S   FORM125
00A00232                           549  
00A00232  6100 FF1C                550           BSR     FORMREGD       D@,D@;   FORMAT SOURCE
00A00236                           551  
00A00236  1CC5                     552           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00238                           553  
00A00238  1814                     554           MOVE.B  (A4),D4
00A0023A  E20C                     555           LSR.B   #1,D4
00A0023C  6100 FF12                556           BSR     FORMREGD       FORMAT DESTINATION
00A00240  6046                     557           BRA.S   CS11           COMMON
00A00242                           558  
00A00242  1CFC 002D                559  FORM125  MOVE.B  #'-',(A6)+     -
00A00246  1CFC 0028                560           MOVE.B  #'(',(A6)+     (
00A0024A  6100 FEF4                561           BSR     FORMREGA       A@    SOURCE
00A0024E                           562  
00A0024E  203C 282D2C29            563           MOVE.L  #'(-,)',D0     ),-(
00A00254  6152                     564           BSR.S   SCHR           STORE CHARS
00A00256                           565  
00A00256  1814                     566           MOVE.B  (A4),D4
00A00258  E20C                     567           LSR.B   #1,D4
00A0025A  6100 FEE4                568           BSR     FORMREGA       A@   DESTINATION
00A0025E  1CFC 0029                569           MOVE.B  #')',(A6)+
00A00262  6024                     570           BRA.S   CS11           COMMON
00A00264                           571  
00A00264                           572  *  BIT   5432109876543210
00A00264                           573  *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
00A00264                           574  *        ....XXX.00......       BYTE
00A00264                           575  *        ........01......       WORD
00A00264                           576  *        ........10......       LONG
00A00264                           577  *        ............1...       MEMORY TO MEMORY
00A00264                           578  *        ............1XXX       ADDRESS SOURCE REGISTER
00A00264                           579  *
00A00264                           580m          LONG
00A00264                           581  FORM12A  DS      0              CMPM
00A00264  6100 0276                582           BSR     FORMSIZE
00A00268                           583  
00A00268  1CFC 0028                584           MOVE.B  #'(',(A6)+     (
00A0026C  6100 FED2                585           BSR     FORMREGA       A@
00A00270                           586  
00A00270  203C 282C2B29            587           MOVE.L  #'(,+)',D0     )+,(
00A00276  6130                     588           BSR.S   SCHR           STORE CHARS
00A00278                           589  
00A00278  1814                     590           MOVE.B  (A4),D4
00A0027A  E20C                     591           LSR.B   #1,D4
00A0027C  6100 FEC2                592           BSR     FORMREGA       A@
00A00280  1CFC 0029                593           MOVE.B  #')',(A6)+
00A00284  1CFC 002B                594           MOVE.B  #'+',(A6)+
00A00288  6000 05CC                595  CS11     BRA     COMMON
00A0028C                           596  
00A0028C                           597m          LONG
00A0028C  6000 021E                598  IQUICK   BRA     IQUICKA        ADDQ  SUBQ
00A00290                           599  
00A00290                           600  *  BIT   5432109876543210
00A00290                           601  *        0111...0........       FIXED
00A00290                           602  *        ....RRR.........       DATA REGISTER
00A00290                           603  *        ........DDDDDDDD       SIGN EXTENDED DATA
00A00290                           604  *
00A00290                           605m          LONG
00A00290                           606  IMOVEQ   DS      0
00A00290  1CFC 0023                607           MOVE.B  #'#',(A6)+     IMMEDIATE
00A00294                           608  
00A00294  3014                     609           MOVE.W  (A4),D0
00A00296  4880                     610           EXT.W   D0
00A00298  48C0                     611           EXT.L   D0
00A0029A  6100 0EE4                612           BSR     HEX2DEC        DECIMAL
00A0029E                           613  
00A0029E  1CC5                     614           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A002A0                           615  
00A002A0  EF5C                     616           ROL.W   #7,D4
00A002A2  6100 FEAC                617           BSR     FORMREGD
00A002A6  60E0                     618           BRA     CS11           COMMON
00A002A8                           619  
00A002A8  1CC0                     620  SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
00A002AA  E088                     621           LSR.L   #8,D0
00A002AC  66FA                     622           BNE     SCHR           MORE TO OUTPUT
00A002AE  4E75                     623           RTS
00A002B0                           624  
00A002B0                           625  * MOVE FROM SR  (STATUS REGISTER)
00A002B0                           626  *
00A002B0                           627m          LONG
00A002B0  203C 2C525300            628  IMVFSR   MOVE.L  #',RS'+0,D0   SR,
00A002B6                           629  
00A002B6  61F0                     630           BSR     SCHR
00A002B8  6100 02AC                631           BSR     EEA            DATA ALTERABLE
00A002BC  60CA                     632           BRA     CS11           COMMON
00A002BE                           633  
00A002BE                           634  * MOVE FROM USP (USER STACK POINTER)
00A002BE                           635  *
00A002BE                           636m          LONG
00A002C0  203C 2C505355            637  IMVFUSP  MOVE.L  #',PSU',D0     USP,
00A002C6  61E0                     638           BSR     SCHR
00A002C8  6100 FE76                639           BSR     FORMREGA
00A002CC  60BA                     640           BRA     CS11           COMMON
00A002CE                           641  
00A002CE                           642  * MOVE TO SR (STATUS REGISTER)
00A002CE                           643  *
00A002CE                           644m          LONG
00A002D0  3E3C 0FFD                645  IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
00A002D4  6100 0290                646           BSR     EEA
00A002D8  203C 52532C00            647           MOVE.L  #'RS,'+0,D0   ,SR
00A002DE  61C8                     648  IMVT44   BSR     SCHR
00A002E0  60A6                     649           BRA     CS11           COMMON
00A002E2                           650  
00A002E2                           651  * MOVE TO USP (USER STACK POINTER)
00A002E2                           652  *
00A002E2                           653m          LONG
00A002E4  6100 FE5A                654  IMVTUSP  BSR     FORMREGA
00A002E8  203C 5053552C            655           MOVE.L  #'PSU,',D0     ,USP
00A002EE  60EE                     656           BRA     IMVT44
00A002F0                           657  
00A002F0                           658  *  MOVE TO CCR (CONDITION CODE REGISTER)
00A002F0                           659  *
00A002F0                           660m          LONG
00A002F0  3E3C 0FFD                661  IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
00A002F4  6100 0270                662           BSR     EEA
00A002F8  203C 5243432C            663           MOVE.L  #'RCC,',D0     ,CCR
00A002FE  60DE                     664           BRA     IMVT44
00A00300                           665  
00A00300                           666  *  BIT   5432109876543210
00A00300                           667  *        0000...1..001...       FIXED
00A00300                           668  *        ....XXX.........       DATA REGISTER
00A00300                           669  *        ........0.......       MEMORY TO REGISTER
00A00300                           670  *        ........1.......       REGISTER TO MEMORY
00A00300                           671  *        .........0......       WORD
00A00300                           672  *        .........1......       LONG
00A00300                           673  *        .............XXX       ADDRESS REGISTER
00A00300                           674  *
00A00300                           675m          LONG
00A00300                           676  IMOVEP   DS      0
00A00300  1AFC 002E                677           MOVE.B  #'.',(A5)+     D@,#(A@)
00A00304  303C 4C57                678           MOVE.W  #'LW',D0
00A00308  0804 0006                679           BTST    #6,D4
00A0030C  6702                     680           BEQ.S   IMOVEP11       USE "W"
00A0030E  E048                     681           LSR.W   #8,D0          USE "L"
00A00310  1AC0                     682  IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
00A00312                           683  
00A00312  1814                     684           MOVE.B  (A4),D4
00A00314  E20C                     685           LSR.B   #1,D4
00A00316                           686  
00A00316  082C 0007 0001           687           BTST.B  #7,1(A4)
00A0031C  670E                     688           BEQ.S   IMOVEP35
00A0031E                           689  
00A0031E  6100 FE30                690           BSR     FORMREGD       D@,$HHHH(A@)
00A00322                           691  
00A00322  1CC5                     692           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00324                           693  
00A00324  3814                     694           MOVE.W  (A4),D4
00A00326  6112                     695           BSR.S   IMOVEP66
00A00328  6000 052A                696  CS20     BRA     COMMON4
00A0032C                           697  
00A0032C  610C                     698  IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
00A0032E                           699  
00A0032E  1CC5                     700           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00330                           701  
00A00330  1814                     702           MOVE.B  (A4),D4
00A00332  E20C                     703           LSR.B   #1,D4
00A00334  6100 FE1A                704           BSR     FORMREGD
00A00338  60EE                     705           BRA     CS20           COMMON4
00A0033A                           706  
00A0033A  1CFC 0024                707  IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
00A0033E  302C 0002                708           MOVE.W  2(A4),D0
00A00342  6100 0EB2                709           BSR     PNT4HX
00A00346                           710  
00A00346  1CFC 0028                711           MOVE.B  #'(',(A6)+
00A0034A                           712  
00A0034A  3814                     713           MOVE.W  (A4),D4
00A0034C  6100 FDF2                714           BSR     FORMREGA
00A00350  1CFC 0029                715           MOVE.B  #')',(A6)+
00A00354  4E75                     716           RTS
00A00356                           717  
00A00356                           718m          LONG
00A00358  6000 04FC                719  SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
00A0035C                           720  
00A0035C                           721m          LONG
00A0035C  6100 00EA                722  ISCC     BSR     ICCCC          GET REST OF OP-CODE
00A00360  6100 0204                723           BSR     EEA            DATA ALTERABLE
00A00364  60F2                     724           BRA     SCOMMON
00A00366                           725  
00A00366                           726  
00A00366                           727m          LONG
00A00368                           728  IDBCC    DS      0              DB--
00A00368  3814                     729           MOVE.W  (A4),D4
00A0036A  6100 FDE4                730           BSR     FORMREGD
00A0036E                           731  
00A0036E  1CC5                     732           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00370  1CFC 0024                733           MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
00A00374                           734  
00A00374  6100 00D2                735           BSR     ICCCC
00A00378  602E                     736           BRA.S   ICC55
00A0037A                           737  
00A0037A                           738  *  BIT   5432109876543210
00A0037A                           739  *        0110............       FIXED
00A0037A                           740  *        ....CCCC........       CONDITION
00A0037A                           741  *        ........DDDDDDD0       DISPLACEMENT
00A0037A                           742  *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
00A0037A                           743  *
00A0037A                           744m          LONG
00A0037C                           745  ICC      DS      0              B--
00A0037C  6100 00CA                746           BSR     ICCCC
00A00380                           747  
00A00380  1CFC 0024                748  IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
00A00384                           749  
00A00384  4A04                     750           TST.B   D4
00A00386  6720                     751           BEQ.S   ICC55          16 BIT DISPLACEMENT
00A00388                           752  
00A00388  1AFC 002E                753           MOVE.B  #'.',(A5)+
00A0038C  1AFC 0053                754           MOVE.B  #'S',(A5)+
00A00390  4884                     755           EXT.W   D4             8 BIT DISPLACEMENT
00A00392                           756  
00A00392  48C4                     757  ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
00A00394  D8A9 FFFC                758           ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
00A00398  5484                     759           ADDQ.L  #2,D4          + TWO
00A0039A  2004                     760           MOVE.L  D4,D0
00A0039C                           761  
00A0039C  E284                     762           ASR.L   #1,D4
00A0039E  6500 04DE                763           BCS     FERROR         ODD BOUNDRY DISPLACEMENT
00A003A2                           764  
00A003A2  6100 0E4C                765           BSR     PNT6HX
00A003A6  60B0                     766           BRA     SCOMMON
00A003A8                           767  
00A003A8  5483                     768  ICC55    ADDQ.L  #2,D3          SIZE
00A003AA  382C 0002                769           MOVE.W  2(A4),D4
00A003AE  1AFC 002E                770           MOVE.B  #'.',(A5)+
00A003B2  1AFC 004C                771           MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
00A003B6  60DA                     772           BRA     ICC35
00A003B8                           773  
00A003B8                           774m          LONG
00A003B8                           775  *                               BCHG  BCLR  BSET  BTST
00A003B8                           776  ISETD    DS      0              DYNAMIC BIT
00A003B8  EF5C                     777           ROL.W   #7,D4
00A003BA  6100 FD94                778           BSR     FORMREGD       DATA REGISTER
00A003BE                           779  
00A003BE  1CC5                     780  ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A003C0                           781  
00A003C0  3814                     782           MOVE.W  (A4),D4
00A003C2  6100 01A2                783           BSR     EEA            DATA ALTERABLE
00A003C6  6090                     784  CS18     BRA     SCOMMON
00A003C8                           785  
00A003C8                           786m          LONG
00A003C8                           787  *                            BCHG  BCLR  BSET  BTST
00A003C8                           788  *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
00A003C8                           789  *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
00A003C8                           790  *
00A003C8                           791  ISETS    DS      0              STATIC BIT
00A003C8  5483                     792           ADDQ.L  #2,D3     SIZE
00A003CA  1CFC 0023                793           MOVE.B  #'#',(A6)+     IMMEDIATE
00A003CE                           794  
00A003CE  4280                     795           CLR.L   D0
00A003D0  302C 0002                796           MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
00A003D4  2200                     797           MOVE.L  D0,D1
00A003D6  EA89                     798           LSR.L   #5,D1
00A003D8  6600 04A4                799           BNE     FERROR
00A003DC  6100 0DA2                800           BSR     HEX2DEC        DECIMAL
00A003E0                           801  
00A003E0  60DC                     802           BRA     ISETD12
00A003E2                           803  
00A003E2                           804  *   BIT  5432109876543210
00A003E2                           805  *        ....XXX.........       IMMEDIATE COUNT/REGISTER
00A003E2                           806  *        .......0........       RIGHT SHIFT
00A003E2                           807  *        .......1........       LEFT SHIFT
00A003E2                           808  *        ........00......       BYTE
00A003E2                           809  *        ........01......       WORD
00A003E2                           810  *        ........10......       LONG
00A003E2                           811  *        ....0...11......       WORD (MEMORY)
00A003E2                           812  *        ....0...11AAAAAA       EFFECTIVE ADDRESS
00A003E2                           813  *        ..........0.....       SHIFT IMMEDIATE COUNT
00A003E2                           814  *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
00A003E2                           815  *
00A003E2                           816m          LONG
00A003E4                           817  ISHIFT   DS      0              AS-  LS-  RO-  ROX-
00A003E4  303C 4C52                818           MOVE.W  #'LR',D0
00A003E8  0804 0008                819           BTST    #8,D4          DIRECTION BIT
00A003EC  6702                     820           BEQ.S   ISHIFT13       RIGHT
00A003EE  E048                     821           LSR.W   #8,D0          LEFT
00A003F0  1AC0                     822  ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
00A003F2                           823  
00A003F2  3014                     824           MOVE.W  (A4),D0
00A003F4  0240 00C0                825           ANDI.W  #$00C0,D0
00A003F8  0C40 00C0                826           CMPI.W  #$00C0,D0
00A003FC  6730                     827           BEQ.S   ISHIFTM1       MEMORY SHIFT
00A003FE                           828  
00A003FE  6100 00DC                829           BSR     FORMSIZE
00A00402                           830  
00A00402  EF5C                     831           ROL.W   #7,D4
00A00404  0804 000C                832           BTST    #12,D4         I/R BIT
00A00408  6616                     833           BNE.S   ISHIFT33       COUNT IN REGISTER
00A0040A                           834  
00A0040A  0204 0007                835           ANDI.B  #$07,D4        IMMEDIATE COUNT
00A0040E  6604                     836           BNE.S   ISHIFT23
00A00410  0004 0008                837           ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
00A00414  0004 0030                838  ISHIFT23 ORI.B   #'0',D4
00A00418  1CFC 0023                839           MOVE.B  #'#',(A6)+
00A0041C  1CC4                     840           MOVE.B  D4,(A6)+
00A0041E  6004                     841           BRA.S   ISHIFT44
00A00420                           842  
00A00420  6100 FD2E                843  ISHIFT33 BSR     FORMREGD
00A00424                           844  
00A00424  1CC5                     845  ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00426                           846  
00A00426  3814                     847           MOVE.W  (A4),D4
00A00428  6100 FD26                848           BSR     FORMREGD
00A0042C  6098                     849  CS17     BRA     CS18           COMMON
00A0042E                           850  
00A0042E  1AFC 002E                851  ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
00A00432  1AFC 0057                852           MOVE.B  #'W',(A5)+     .WORD
00A00436                           853  
00A00436  0804 000B                854           BTST    #11,D4
00A0043A  6600 0442                855           BNE     FERROR         BIT 11 MUST BE ZERO
00A0043E                           856  
00A0043E  3E3C 01FC                857           MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
00A00442  6100 0122                858           BSR     EEA
00A00446  60E4                     859           BRA     CS17           COMMON
00A00448                           860  
00A00448  700F                     861  ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
00A0044A  C014                     862           AND.B   (A4),D0        D0 = CCC
00A0044C  E388                     863           LSL.L   #1,D0          D0 = CCC*2
00A0044E                           864  
00A0044E  323B 0010                865           MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
00A00452  1AC1                     866           MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
00A00454  E049                     867           LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
00A00456  0C01 0020                868           CMPI.B  #BLANK,D1          TO THE BUFFER.
00A0045A  6702                     869           BEQ.S   ICCCC9
00A0045C  1AC1                     870           MOVE.B  D1,(A5)+
00A0045E  4E75                     871  ICCCC9   RTS
00A00460                           872  
00A00460= 20 54                    873  BRTBL    DC.B    ' T'      'T '  BRA ACCEPTED
00A00462= 20 46                    874           DC.B    ' F'      'F '
00A00464= 49 48                    875           DC.B    'IH'      'HI'
00A00466= 53 4C                    876           DC.B    'SL'      'LS'
00A00468= 43 43                    877           DC.B    'CC'      'CC'
00A0046A= 53 43                    878           DC.B    'SC'      'CS'
00A0046C= 45 4E                    879           DC.B    'EN'      'NE'
00A0046E= 51 45                    880           DC.B    'QE'      'EQ'
00A00470= 43 56                    881           DC.B    'CV'      'VC'
00A00472= 53 56                    882           DC.B    'SV'      'VS'
00A00474= 4C 50                    883           DC.B    'LP'      'PL'
00A00476= 49 4D                    884           DC.B    'IM'      'MI'
00A00478= 45 47                    885           DC.B    'EG'      'GE'
00A0047A= 54 4C                    886           DC.B    'TL'      'LT'
00A0047C= 54 47                    887           DC.B    'TG'      'GT'
00A0047E= 45 4C                    888           DC.B    'EL'      'LE'
00A00480                           889  
00A00480                           890  *   BIT  5432109876543210
00A00480                           891  *        ....RRRMMM......    DESTINATION REGISTER MODE
00A00480                           892  *        ..........MMMRRR    SOURCE MODE REGISTER
00A00480                           893  *
00A00480                           894  * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
00A00480                           895  *
00A00480                           896  IMOVEA1  DS      0
00A00480  3E3C 0FFF                897           MOVE.W  #$FFF,D7       ALL MODES
00A00484  6100 00E0                898           BSR     EEA
00A00488                           899  
00A00488  1CC5                     900           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A0048A                           901  
00A0048A  3814                     902           MOVE.W  (A4),D4        ....RRRMMM......
00A0048C  E24C                     903           LSR.W   #1,D4          .....RRRMMM.....
00A0048E  EA0C                     904           LSR.B   #5,D4          .....RRR.....MMM
00A00490  E05C                     905           ROR.W   #8,D4          .....MMM.....RRR
00A00492  EB0C                     906           LSL.B   #5,D4          .....MMMRRR.....
00A00494  EA4C                     907           LSR.W   #5,D4          ..........MMMRRR
00A00496                           908  
00A00496                           909  * IF .BYTE DESTINATION A@ NOT ALLOWED
00A00496  3E3C 01FF                910           MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
00A0049A  1014                     911           MOVE.B  (A4),D0
00A0049C  0C00 0001                912           CMPI.B  #$01,D0
00A004A0  6604                     913           BNE.S   IMOVE19        NOT BYTE SIZE
00A004A2                           914  
00A004A2  3E3C 01FD                915           MOVE.W  #$1FD,D7       DATA ALTERABLE
00A004A6                           916  IMOVE19
00A004A6                           917  
00A004A6  6100 00BE                918           BSR     EEA
00A004AA  602C                     919           BRA.S   CS19           COMMON
00A004AC                           920  
00A004AC                           921  *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
00A004AC                           922  IQUICKA  DS      0              ADDQ  SUBQ
00A004AC  612E                     923           BSR.S   FORMSIZE
00A004AE                           924  
00A004AE  1CFC 0023                925           MOVE.B  #'#',(A6)+
00A004B2  EF5C                     926           ROL.W   #7,D4
00A004B4  0204 0007                927           ANDI.B  #7,D4
00A004B8  6604                     928           BNE.S   IQUICK21
00A004BA  0004 0008                929           ORI.B   #8,D4          MAKE ZERO INTO EIGHT
00A004BE  0004 0030                930  IQUICK21 ORI.B   #'0',D4        MAKE ASCII
00A004C2  1CC4                     931           MOVE.B  D4,(A6)+
00A004C4                           932  
00A004C4  1CC5                     933           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A004C6                           934  
00A004C6  3814                     935           MOVE.W  (A4),D4
00A004C8                           936  
00A004C8  3014                     937           MOVE.W  (A4),D0
00A004CA  0240 00C0                938           ANDI.W  #$00C0,D0
00A004CE  6704                     939           BEQ.S   IQUICK31       DATA ALTERABLE
00A004D0  3E3C 01FF                940           MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
00A004D4  6100 0090                941  IQUICK31 BSR     EEA
00A004D8  6000 037C                942  CS19     BRA     COMMON
00A004DC                           943  
00A004DC                           944  *  BIT   5432109876543210
00A004DC                           945  *        ........00......       BYTE
00A004DC                           946  *        ........01......       WORD
00A004DC                           947  *        ........10......       LONG
00A004DC                           948  *        ........11......       ERROR
00A004DC                           949  *
00A004DC                           950  FORMSIZE DS      0
00A004DC  3414                     951           MOVE.W  (A4),D2
00A004DE  1AFC 002E                952           MOVE.B  #'.',(A5)+     STORE PERIOD
00A004E2  EC4A                     953           LSR.W   #6,D2
00A004E4  0242 0003                954           ANDI.W  #$03,D2
00A004E8  6606                     955           BNE.S   FORM91
00A004EA  1AFC 0042                956           MOVE.B  #'B',(A5)+     STORE "B"
00A004EE  6016                     957           BRA.S   FORM95
00A004F0                           958  
00A004F0  103C 0057                959  FORM91   MOVE.B  #'W',D0
00A004F4  0C02 0001                960           CMPI.B  #1,D2
00A004F8  670A                     961           BEQ.S   FORM93
00A004FA  103C 004C                962           MOVE.B  #'L',D0
00A004FE  0C02 0002                963           CMPI.B  #2,D2
00A00502  665E                     964           BNE.S   FE10           FERROR
00A00504  1AC0                     965  FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
00A00506  4E75                     966  FORM95   RTS
00A00508                           967  
00A00508  6100 FC46                968  EA000    BSR     FORMREGD
00A0050C  0807 0000                969           BTST    #0,D7
00A00510  6750                     970           BEQ.S   FE10           FERROR
00A00512  4E75                     971           RTS
00A00514                           972  
00A00514  6100 FC2A                973  EA001    BSR     FORMREGA
00A00518  0807 0001                974           BTST    #1,D7
00A0051C  6744                     975           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A0051E  4E75                     976           RTS
00A00520                           977  
00A00520  1CFC 0028                978  EA010    MOVE.B  #'(',(A6)+
00A00524  6100 FC1A                979           BSR     FORMREGA
00A00528  1CFC 0029                980           MOVE.B  #')',(A6)+
00A0052C  0807 0002                981           BTST    #2,D7
00A00530  6730                     982           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A00532  4E75                     983           RTS
00A00534                           984  
00A00534  1CFC 0028                985  EA011    MOVE.B  #'(',(A6)+
00A00538  6100 FC06                986           BSR     FORMREGA
00A0053C  1CFC 0029                987           MOVE.B  #')',(A6)+
00A00540  1CFC 002B                988           MOVE.B  #'+',(A6)+
00A00544  0807 0003                989           BTST    #3,D7
00A00548  6718                     990           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A0054A  4E75                     991  EA011RTS RTS
00A0054C                           992  
00A0054C  1CFC 002D                993  EA100    MOVE.B  #'-',(A6)+
00A00550  1CFC 0028                994           MOVE.B  #'(',(A6)+
00A00554  6100 FBEA                995           BSR     FORMREGA
00A00558  1CFC 0029                996           MOVE.B  #')',(A6)+
00A0055C  0807 0004                997           BTST    #4,D7
00A00560  66E8                     998           BNE     EA011RTS
00A00562  6000 031A                999  FE10     BRA     FERROR         THIS MODE NOT ALLOWED
00A00566                          1000  
00A00566                          1001  *  ENTER       A4 = POINTER TO FIRST WORD
00A00566                          1002  *              D3 = OFFSET TO EXTENSION
00A00566                          1003  *              D4 = VALUE TO PROCESS
00A00566                          1004  *              D7 = MODES ALLOWED MASK
00A00566                          1005  *
00A00566                          1006  EEA      DS      0
00A00566  2004                    1007           MOVE.L  D4,D0
00A00568  E648                    1008           LSR.W   #3,D0
00A0056A  0240 0007               1009           ANDI.W  #$7,D0
00A0056E  6798                    1010           BEQ     EA000
00A00570                          1011  
00A00570  0C00 0001               1012           CMPI.B  #1,D0
00A00574  679E                    1013           BEQ     EA001
00A00576                          1014  
00A00576  0C00 0002               1015           CMPI.B  #2,D0
00A0057A  67A4                    1016           BEQ     EA010
00A0057C                          1017  
00A0057C  0C00 0003               1018           CMPI.B  #3,D0
00A00580  67B2                    1019           BEQ     EA011
00A00582                          1020  
00A00582  0C00 0004               1021           CMPI.B  #4,D0
00A00586  67C4                    1022           BEQ     EA100
00A00588                          1023  
00A00588  0C00 0005               1024           CMPI.B  #5,D0
00A0058C  6760                    1025           BEQ.S   EA101
00A0058E                          1026  
00A0058E  0C00 0007               1027           CMPI.B  #7,D0
00A00592  6770                    1028           BEQ.S   EA111
00A00594                          1029  
00A00594                          1030  *    EXTENSION WORD
00A00594                          1031  *   BIT  5432109876543210
00A00594                          1032  *        0...............    DATA REGISTER
00A00594                          1033  *        1...............    ADDRESS REGISTER
00A00594                          1034  *        .RRR............    REGISTER
00A00594                          1035  *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
00A00594                          1036  *        ....1...........    LONG VALUE IN INDEX REGISTER
00A00594                          1037  *        .....000........
00A00594                          1038  *        ........DDDDDDDD    DISPLACEMENT INTEGER
00A00594                          1039  *
00A00594                          1040  * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
00A00594                          1041  
00A00594  0807 0006               1042           BTST    #6,D7
00A00598  67C8                    1043           BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
00A0059A                          1044  
00A0059A  3234 3000               1045           MOVE.W  (A4,D3),D1
00A0059E  0241 0700               1046           ANDI.W  #$0700,D1
00A005A2  66BE                    1047           BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
00A005A4                          1048  
00A005A4  3034 3000               1049           MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
00A005A8  4880                    1050           EXT.W   D0
00A005AA  48C0                    1051           EXT.L   D0
00A005AC  6100 0BD2               1052           BSR     HEX2DEC        DECIMAL
00A005B0  1CFC 0028               1053           MOVE.B  #'(',(A6)+     (
00A005B4                          1054  
00A005B4  6100 FB8A               1055           BSR     FORMREGA       XX(A@
00A005B8                          1056  
00A005B8  1CFC 002C               1057           MOVE.B  #',',(A6)+     XX(A@,
00A005BC                          1058  
00A005BC  1834 3000               1059           MOVE.B  (A4,D3),D4
00A005C0  E804                    1060           ASR.B   #4,D4
00A005C2  6A06                    1061           BPL.S   EA1105
00A005C4  6100 FB7A               1062           BSR     FORMREGA
00A005C8  6004                    1063           BRA.S   EA1107
00A005CA                          1064  
00A005CA  6100 FB84               1065  EA1105   BSR     FORMREGD
00A005CE  1CFC 002E               1066  EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
00A005D2                          1067  
00A005D2  3834 3000               1068           MOVE.W  (A4,D3),D4     D4 = R@
00A005D6  103C 0057               1069           MOVE.B  #'W',D0        ..........W
00A005DA  0804 000B               1070           BTST    #11,D4
00A005DE  6704                    1071           BEQ.S   EA1109
00A005E0  103C 004C               1072           MOVE.B  #'L',D0        ..........L
00A005E4  1CC0                    1073  EA1109   MOVE.B  D0,(A6)+
00A005E6  1CFC 0029               1074           MOVE.B  #')',(A6)+     ...........)
00A005EA  5483                    1075           ADDQ.L  #2,D3
00A005EC  4E75                    1076           RTS
00A005EE                          1077  
00A005EE                          1078  * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
00A005EE                          1079  *
00A005EE  0807 0005               1080  EA101    BTST    #5,D7          101000;   DIS(A@)
00A005F2  6756                    1081           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A005F4                          1082  
00A005F4  3034 3000               1083           MOVE.W  (A4,D3),D0
00A005F8  48C0                    1084           EXT.L   D0
00A005FA  6100 0B84               1085           BSR     HEX2DEC        DECIMAL
00A005FE  5483                    1086           ADDQ.L  #2,D3          SIZE
00A00600  6000 FF1E               1087           BRA     EA010
00A00604                          1088  
00A00604                          1089  *  111000        ABSOLUTE SHORT
00A00604                          1090  *  111001        ABSOLUTE LONG
00A00604                          1091  *  111010        PROGRAM COUNTER WITH DISPLACEMENT
00A00604                          1092  *  111011        PROGRAM COUNTER WITH INDEX
00A00604                          1093  *  111100        IMMEDIATE OR STATUS REG
00A00604                          1094  *
00A00604                          1095  EA111
00A00604  0244 0007               1096           ANDI.W  #7,D4
00A00608  6618                    1097           BNE.S   EA1112
00A0060A                          1098  
00A0060A  0807 0007               1099           BTST    #7,D7
00A0060E  673A                    1100           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A00610                          1101  
00A00610  3034 3000               1102           MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
00A00614  48C0                    1103           EXT.L   D0
00A00616  1CFC 0024               1104           MOVE.B  #'$',(A6)+
00A0061A  6100 0BCC               1105           BSR     PNT8HX         SIGN EXTENDED VALUE
00A0061E  5483                    1106           ADDQ.L  #2,D3          SIZE + 2
00A00620  4E75                    1107           RTS
00A00622                          1108  
00A00622  0C04 0001               1109  EA1112   CMPI.B  #1,D4
00A00626  6616                    1110           BNE.S   EA1113
00A00628                          1111  
00A00628  0807 0008               1112           BTST    #8,D7
00A0062C  671C                    1113           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A0062E                          1114  
00A0062E  1CFC 0024               1115           MOVE.B  #'$',(A6)+     HEX
00A00632  2034 3000               1116           MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
00A00636  6100 0BB0               1117           BSR     PNT8HX
00A0063A                          1118  *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
00A0063A                          1119  *-       MOVE.B  #'L',(A6)+     IE   .L
00A0063A  5883                    1120           ADDQ.L  #4,D3
00A0063C  4E75                    1121           RTS
00A0063E                          1122  
00A0063E  0C04 0002               1123  EA1113   CMPI.B  #2,D4
00A00642  662C                    1124           BNE.S   EA1114
00A00644                          1125  
00A00644  0807 0009               1126           BTST    #9,D7
00A00648  6604                    1127           BNE.S   EA1113A
00A0064A  6000 0232               1128  FE11     BRA     FERROR         THIS MODE NOT ALLOWED
00A0064E                          1129  EA1113A
00A0064E                          1130  
00A0064E  3034 3000               1131           MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
00A00652  48C0                    1132           EXT.L   D0
00A00654  D0A9 FFFC               1133           ADD.L   HISPC(A1),D0
00A00658  5480                    1134           ADDQ.L  #2,D0
00A0065A  1CFC 0024               1135           MOVE.B  #'$',(A6)+     HEX "$"
00A0065E  6100 0B88               1136           BSR     PNT8HX         DESTINATION
00A00662  203C 29435028           1137           MOVE.L  #')CP(',D0     (PC)
00A00668  6100 FC3E               1138           BSR     SCHR           STORE WORD
00A0066C  5483                    1139           ADDQ.L  #2,D3          SIZE
00A0066E  4E75                    1140           RTS
00A00670                          1141  
00A00670  0C04 0003               1142  EA1114   CMPI.B  #3,D4
00A00674  6664                    1143           BNE.S   EA1115
00A00676                          1144  
00A00676                          1145  * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
00A00676                          1146  *
00A00676                          1147  *        5432109876543210       SECOND WORD
00A00676                          1148  *        0...............       DATA REGISTER
00A00676                          1149  *        1...............       ADDRESS REGISTER
00A00676                          1150  *        .XXX............       REGISTER
00A00676                          1151  *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
00A00676                          1152  *                               ..IN INDEX REGISTER
00A00676                          1153  *        ....1...........       LONG VALUE IN INDEX REGISTER
00A00676                          1154  *        .....000........
00A00676                          1155  *        ........XXXXXXXX       DISPLACEMENT INTEGER
00A00676                          1156  *
00A00676  0807 000A               1157           BTST    #10,D7
00A0067A  67CE                    1158           BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
00A0067C                          1159  
00A0067C  3234 3000               1160           MOVE.W  (A4,D3),D1
00A00680  0241 0700               1161           ANDI.W  #$0700,D1
00A00684  66C4                    1162           BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
00A00686                          1163  
00A00686  1034 3001               1164           MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
00A0068A  4880                    1165           EXT.W   D0
00A0068C  48C0                    1166           EXT.L   D0
00A0068E  D0A9 FFFC               1167           ADD.L   HISPC(A1),D0
00A00692  5480                    1168           ADDQ.L  #2,D0
00A00694  1CFC 0024               1169           MOVE.B  #'$',(A6)+     HEX "$"
00A00698  6100 0B4E               1170           BSR     PNT8HX         DESTINATION
00A0069C                          1171  
00A0069C  203C 2C435028           1172           MOVE.L  #',CP(',D0
00A006A2  6100 FC04               1173           BSR     SCHR           DES(PC,
00A006A6                          1174  
00A006A6  3834 3000               1175           MOVE.W  (A4,D3),D4
00A006AA  E95C                    1176           ROL.W   #4,D4
00A006AC  0804 0003               1177           BTST    #3,D4
00A006B0  6706                    1178           BEQ.S   EAF25
00A006B2  6100 FA8C               1179           BSR     FORMREGA
00A006B6  6004                    1180           BRA.S   EAF27
00A006B8  6100 FA96               1181  EAF25    BSR     FORMREGD       DES(PC,R@
00A006BC                          1182  EAF27
00A006BC                          1183  
00A006BC  1CFC 002E               1184           MOVE.B  #'.',(A6)+     DES(PC,R@.
00A006C0                          1185  
00A006C0  3834 3000               1186           MOVE.W  (A4,D3),D4
00A006C4  303C 4C57               1187           MOVE.W  #'LW',D0
00A006C8  0804 000B               1188           BTST    #11,D4
00A006CC  6702                    1189           BEQ.S   EAF35
00A006CE  E048                    1190           LSR.W   #8,D0
00A006D0  1CC0                    1191  EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
00A006D2                          1192  
00A006D2  1CFC 0029               1193           MOVE.B  #')',(A6)+     DES(PC,R@.X)
00A006D6  5483                    1194           ADDQ.L  #2,D3
00A006D8  4E75                    1195           RTS
00A006DA                          1196  
00A006DA                          1197  *   BIT  5432109876543210
00A006DA                          1198  *        ..........111100       FIRST WORD;  #<IMMEDIATE>
00A006DA                          1199  *
00A006DA  0C04 0004               1200  EA1115   CMPI.B  #4,D4
00A006DE  6600 FF6A               1201           BNE     FE11           FERROR
00A006E2                          1202  
00A006E2  0807 000B               1203           BTST    #11,D7
00A006E6  6700 FF62               1204           BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
00A006EA                          1205  
00A006EA  1CFC 0023               1206           MOVE.B  #'#',(A6)+     IMMEDIATE
00A006EE                          1207  
00A006EE  122D FFFF               1208           MOVE.B  -1(A5),D1
00A006F2  0C01 004C               1209           CMPI.B  #'L',D1
00A006F6  6724                    1210           BEQ.S   EA11155        LONG
00A006F8                          1211  
00A006F8  3034 3000               1212           MOVE.W  (A4,D3),D0
00A006FC                          1213  
00A006FC  0C01 0042               1214           CMPI.B  #'B',D1
00A00700  6610                    1215           BNE.S   EA11153        .WORD
00A00702                          1216  
00A00702                          1217  * BYTE SIZE; DATA ALLOWED
00A00702                          1218  *  0000 0000 XXXX XXXX
00A00702                          1219  *  1111 1111 1XXX XXXX
00A00702  2200                    1220           MOVE.L  D0,D1
00A00704  E049                    1221           LSR.W   #8,D1
00A00706  670A                    1222           BEQ.S   EA11153
00A00708  2200                    1223           MOVE.L  D0,D1
00A0070A  EE41                    1224           ASR.W   #7,D1
00A0070C  5241                    1225           ADDQ.W  #1,D1
00A0070E  6600 FF3A               1226           BNE     FE11           FERROR
00A00712                          1227  
00A00712  48C0                    1228  EA11153  EXT.L   D0
00A00714  6100 0A6A               1229           BSR     HEX2DEC
00A00718  5483                    1230           ADDQ.L  #2,D3
00A0071A  4E75                    1231           RTS
00A0071C                          1232  
00A0071C  2034 3000               1233  EA11155  MOVE.L  (A4,D3),D0
00A00720  6100 0A5E               1234           BSR     HEX2DEC
00A00724  5883                    1235           ADDQ.L  #4,D3          SIZE
00A00726  4E75                    1236           RTS
00A00728                          1237  
00A00728  1AFC 002E               1238  MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
00A0072C  303C 4C57               1239           MOVE.W  #'LW',D0
00A00730  0804 0006               1240           BTST    #6,D4
00A00734  6702                    1241           BEQ.S   MOVEMS2
00A00736  E048                    1242           LSR.W   #8,D0
00A00738  1AC0                    1243  MOVEMS2  MOVE.B  D0,(A5)+       SIZE
00A0073A  4E75                    1244           RTS
00A0073C                          1245  
00A0073C                          1246  * MOVEM - REGISTER EXPANSION
00A0073C                          1247  *
00A0073C                          1248  MOVEMR   DS      0
00A0073C  342C 0002               1249           MOVE.W  2(A4),D2       D2 = SECOND WORD
00A00740  7020                    1250           MOVEQ   #$20,D0        D0 = SPACE
00A00742  7E2F                    1251           MOVEQ   #$2F,D7        D7 = /
00A00744  538E                    1252           SUBQ.L  #1,A6          ADJUST STORE POINTER
00A00746  7A30                    1253           MOVEQ   #$30,D5        D5 = REGISTER #
00A00748  383C 4144               1254           MOVE.W  #'AD',D4       D4 = REG CLASS
00A0074C                          1255  
00A0074C  0302                    1256  MOVEMR11 BTST    D1,D2
00A0074E  6730                    1257           BEQ.S   MOVEMR77       BIT RESET
00A00750                          1258  
00A00750  B016                    1259           CMP.B   (A6),D0        BIT SET
00A00752  6612                    1260           BNE.S   MOVEMR44       NOT SPACE
00A00754                          1261  
00A00754  1D44 0001               1262  MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
00A00758  1D45 0002               1263           MOVE.B  D5,2(A6)       REG #
00A0075C  1D7C 002D 0003          1264           MOVE.B  #'-',3(A6)     -
00A00762  568E                    1265           ADDQ.L  #3,A6
00A00764  602E                    1266           BRA.S   MOVEMR88
00A00766                          1267  
00A00766  0C16 002C               1268  MOVEMR44 CMPI.B  #',',(A6)
00A0076A  67E8                    1269           BEQ     MOVEMR33       COMMA SEPARATOR
00A0076C                          1270  
00A0076C  BE16                    1271           CMP.B   (A6),D7        / SEPARATOR
00A0076E  67E4                    1272           BEQ     MOVEMR33
00A00770                          1273  
00A00770  1D44 0001               1274           MOVE.B  D4,1(A6)       REG TYPE
00A00774  1D45 0002               1275           MOVE.B  D5,2(A6)       REG #
00A00778  1D7C 002D 0003          1276           MOVE.B  #'-',3(A6)     - SEPARATOR
00A0077E  6014                    1277           BRA.S   MOVEMR88
00A00780                          1278  
00A00780  0C16 002C               1279  MOVEMR77 CMPI.B  #',',(A6)
00A00784  670E                    1280           BEQ.S   MOVEMR88       COMMA
00A00786                          1281  
00A00786  B016                    1282           CMP.B   (A6),D0
00A00788  670A                    1283           BEQ.S   MOVEMR88       SPACE
00A0078A  B02E 0001               1284           CMP.B   1(A6),D0
00A0078E  6702                    1285           BEQ.S   MOVEMR79       SPACE
00A00790  568E                    1286           ADDQ.L  #3,A6
00A00792  1C87                    1287  MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
00A00794                          1288  
00A00794  5285                    1289  MOVEMR88 ADDQ.L  #1,D5
00A00796  D286                    1290           ADD.L   D6,D1          D1 = BIT POSITION
00A00798  0C05 0038               1291           CMPI.B  #'8',D5
00A0079C  66AE                    1292           BNE     MOVEMR11
00A0079E                          1293  
00A0079E  B016                    1294           CMP.B   (A6),D0        SPACE
00A007A0  670A                    1295           BEQ.S   MOVEMR94
00A007A2                          1296  
00A007A2  B02E 0001               1297           CMP.B   1(A6),D0       SPACE
00A007A6  6704                    1298           BEQ.S   MOVEMR94
00A007A8  568E                    1299           ADDQ.L  #3,A6
00A007AA  1C87                    1300           MOVE.B  D7,(A6)        /   SEPARATOR
00A007AC                          1301  
00A007AC  1A3C 0030               1302  MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
00A007B0  E04C                    1303           LSR.W   #8,D4          CHANGE REG TYPE
00A007B2  6698                    1304           BNE     MOVEMR11       MORE
00A007B4                          1305  
00A007B4  1C80                    1306           MOVE.B  D0,(A6)        SPACE
00A007B6  4E75                    1307           RTS
00A007B8                          1308  
00A007B8                          1309  DCODE68K DS      0
00A007B8  4E51 FFF0               1310           LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
00A007BC  48E9 1007 FFF0          1311           MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
00A007C2  49E9 FFF0               1312           LEA     DDATA(A1),A4        POINTS TO THE CODE.
00A007C6                          1313  
00A007C6  264D                    1314           MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
00A007C8  7050                    1315           MOVEQ   #BUFSIZE,D0
00A007CA  2C4B                    1316           MOVE.L  A3,A6
00A007CC  1CFC 0020               1317  DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
00A007D0  5380                    1318           SUBQ.L  #1,D0
00A007D2  66F8                    1319           BNE     DEC311
00A007D4                          1320  
00A007D4  2C4B                    1321           MOVE.L  A3,A6          FORMAT ADDRESS
00A007D6  2029 FFFC               1322           MOVE.L  HISPC(A1),D0
00A007DA  6100 0A3E               1323           BSR     FRELADDR
00A007DE                          1324  
00A007DE                          1325  * CHECK FOR KNOWN ILLEGAL CODES
00A007DE  3014                    1326           MOVE.W  (A4),D0
00A007E0                          1327  
00A007E0  4BFA 00C6               1328           LEA     KI(PC),A5
00A007E4  2C4D                    1329           MOVE.L  A5,A6
00A007E6  DDFC 00000002           1330           ADD.L   #KIEND-KI,A6
00A007EC  B05D                    1331  DEC404   CMP.W   (A5)+,D0
00A007EE  671A                    1332           BEQ.S   FE12           FERROR;  ILLEGAL CODE
00A007F0  BBCE                    1333           CMP.L   A6,A5
00A007F2  66F8                    1334           BNE     DEC404
00A007F4                          1335  
00A007F4                          1336  * LOOK FOR MATCH OF OP-CODE
00A007F4                          1337  *
00A007F4  4BFA 00B4               1338           LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
00A007F8  4DFA 02BA               1339           LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
00A007FC  3014                    1340  DEC411   MOVE.W  (A4),D0        FIRST WORD
00A007FE  C05D                    1341           AND.W   (A5)+,D0       MASK
00A00800  B05D                    1342           CMP.W   (A5)+,D0
00A00802  6708                    1343           BEQ.S   DEC425         FOUND MATCH
00A00804  548D                    1344           ADDQ.L  #2,A5          UPDATE POINTER
00A00806  BBCE                    1345           CMP.L   A6,A5
00A00808  66F2                    1346           BNE     DEC411         MORE TABLE
00A0080A  6072                    1347  FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
00A0080C                          1348  
00A0080C  4286                    1349  DEC425   CLR.L   D6
00A0080E  1C1D                    1350           MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
00A00810  E58E                    1351           LSL.L   #2,D6
00A00812                          1352  
00A00812  4287                    1353           CLR.L   D7
00A00814  1E1D                    1354           MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
00A00816                          1355  
00A00816                          1356  * MOVE OP-CODE TO BUFFER
00A00816                          1357  *
00A00816  41FA 029C               1358           LEA     OPCTBL(PC),A0
00A0081A  4A47                    1359  DEC510   TST     D7
00A0081C  6708                    1360           BEQ.S   DEC530         AT INDEX
00A0081E  4A18                    1361  DEC515   TST.B   (A0)+
00A00820  6AFC                    1362           BPL     DEC515         MOVE THROUGH FIELD
00A00822  5387                    1363           SUBQ.L  #1,D7
00A00824  60F4                    1364           BRA     DEC510
00A00826                          1365  
00A00826  701F                    1366  DEC530   MOVEQ   #FOC,D0
00A00828  4BF3 0000               1367           LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
00A0082C  1018                    1368  DEC535   MOVE.B  (A0)+,D0
00A0082E  0880 0007               1369           BCLR    #7,D0
00A00832  6604                    1370           BNE.S   DEC537         END OF MOVE
00A00834  1AC0                    1371           MOVE.B  D0,(A5)+
00A00836  60F4                    1372           BRA     DEC535
00A00838  1AC0                    1373  DEC537   MOVE.B  D0,(A5)+
00A0083A                          1374  
00A0083A                          1375  * CALCULATE GOTO AND GO
00A0083A                          1376  *
00A0083A  7602                    1377           MOVEQ   #2,D3          D3= SIZE
00A0083C  41FA F7CA               1378           LEA     X(PC),A0
00A00840  D1C6                    1379           ADD.L   D6,A0
00A00842                          1380  
00A00842  7027                    1381           MOVEQ   #FOP,D0
00A00844  4DF3 0000               1382           LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
00A00848                          1383  
00A00848  3814                    1384           MOVE.W  (A4),D4        D4 = FIRST WORD
00A0084A                          1385  
00A0084A  1A3C 002C               1386           MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
00A0084E                          1387  
00A0084E  3E3C 01FD               1388           MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
00A00852                          1389  
00A00852  4ED0                    1390           JMP     (A0)
00A00854                          1391  *
00A00854                          1392  *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
00A00854                          1393  *  A5 = POINTER STORE OP-CODE
00A00854                          1394  *  A6 = POINTER STORE OPERAND
00A00854                          1395  *  D3 = SIZE = 2 BYTES
00A00854                          1396  *  D4 = FIRST WORD
00A00854                          1397  *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
00A00854                          1398  
00A00854  5483                    1399  COMMON4  ADDQ.L  #2,D3          SIZE = 4
00A00856                          1400  
00A00856  2C03                    1401  COMMON   MOVE.L  D3,D6          D6 = SIZE
00A00858  1CFC 0020               1402           MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
00A0085C                          1403  
00A0085C  2A4E                    1404           MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
00A0085E  700A                    1405           MOVEQ   #FDATA,D0
00A00860  4DF3 0000               1406           LEA.L   (A3,D0),A6
00A00864                          1407  
00A00864  301C                    1408  COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
00A00866  54A9 FFFC               1409           ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
00A0086A  6100 098A               1410           BSR     PNT4HX         FORMAT DATA. (A6)+
00A0086E  5503                    1411           SUBQ.B  #2,D3
00A00870  66F2                    1412           BNE     COMMON35
00A00872                          1413  
00A00872  2C4D                    1414           MOVE.L  A5,A6          A6 = RESTORE END POINTER
00A00874                          1415  
00A00874  2A4B                    1416           MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
00A00876                          1417  
00A00876  2869 FFFC               1418           MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
00A0087A  4E59                    1419           UNLK    A1               TO A4 AND UNDO FRAME.
00A0087C                          1420  
00A0087C  4E75                    1421           RTS
00A0087E                          1422  
00A0087E                          1423  
00A0087E                          1424  FERROR   DS      0
00A0087E                          1425  * ILLEGAL INSTRUCTION
00A0087E                          1426  *
00A0087E  701F                    1427           MOVEQ   #FOC,D0
00A00880  4DF3 0000               1428           LEA.L   (A3,D0),A6
00A00884  4BFA 0018               1429           LEA     MSG111(PC),A5
00A00888  101D                    1430  FERROR35 MOVE.B  (A5)+,D0
00A0088A  0C00 0004               1431           CMPI.B  #EOT,D0
00A0088E  6704                    1432           BEQ.S   FERROR39
00A00890  1CC0                    1433           MOVE.B  D0,(A6)+
00A00892  60F4                    1434           BRA     FERROR35
00A00894                          1435  FERROR39 DS      0
00A00894                          1436  
00A00894  3014                    1437           MOVE.W  (A4),D0
00A00896  6100 095E               1438           BSR     PNT4HX
00A0089A                          1439  
00A0089A  7602                    1440           MOVEQ   #2,D3          SIZE
00A0089C                          1441  
00A0089C  60B8                    1442           BRA     COMMON
00A0089E                          1443  
00A0089E= 44 43 2E 57 20 20 ...   1444  MSG111   DC.B    'DC.W    $',EOT
00A008A8                          1445  
00A008A8                          1446  
00A008A8                          1447  
00A008A8= 4AFB                    1448  KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
00A008AA                          1449  KIEND    DS      0
00A008AA                          1450  
00A008AA                          1451  
00A008AA                          1452  *  \1   MASK
00A008AA                          1453  *  \2   OP-CODE PATTERN
00A008AA                          1454  *  \3   GOTO OFFSET
00A008AA                          1455  *  \4   INDEX TO OP-CODE
00A008AA                          1456  C68      MACRO
00A008AA                          1457           DC.W    $\1
00A008AA                          1458           DC.W    $\2
00A008AA                          1459           DC.B    (\3-X)>>2
00A008AA                          1460           DC.B    \4
00A008AA                          1461           ENDM
00A008AA                          1462  
00A008AA                          1463  TBL      DS      0
00A008AA                          1464m          C68     FEC0,E6C0,ISHIFT,56           RO
00A008B0                          1465m          C68     FEC0,E4C0,ISHIFT,57           ROX
00A008B6                          1466m          C68     FEC0,E2C0,ISHIFT,55           LS
00A008BC                          1467m          C68     FEC0,E0C0,ISHIFT,54           AS
00A008C2                          1468m          C68     F018,E018,ISHIFT,56           RO
00A008C8                          1469m          C68     F018,E010,ISHIFT,57           ROX
00A008CE                          1470m          C68     F018,E008,ISHIFT,55           LS
00A008D4                          1471m          C68     F018,E000,ISHIFT,54           AS
00A008DA                          1472m          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
00A008E0                          1473m          C68     F130,D100,FORM12,53           ADDX
00A008E6                          1474m          C68     F000,D000,FORM10EX,4            ADD
00A008EC                          1475m          C68     F1F8,C188,FORM9,50            EXG
00A008F2                          1476m          C68     F1F8,C148,FORM8,50            EXG
00A008F8                          1477m          C68     F1F8,C140,FORM7,50            EXG
00A008FE                          1478m          C68     F1F0,C100,FORM12,49           ABCD
00A00904                          1479m          C68     F1C0,C1C0,FORM6D,48           MULS
00A0090A                          1480m          C68     F1C0,C0C0,FORM6D,47           MULU
00A00910                          1481m          C68     F000,C000,FORM10,2            AND
00A00916                          1482m          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
00A0091C                          1483m          C68     F138,B108,FORM12A,46           CMPM
00A00922                          1484m          C68     F100,B100,FORM10,5            EOR
00A00928                          1485m          C68     F000,B000,FORM10EX,6            CMP
00A0092E                          1486m          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
00A00934                          1487m          C68     F130,9100,FORM12,45           SUBX
00A0093A                          1488m          C68     F000,9000,FORM10EX,44           SUB
00A00940                          1489m          C68     F1F0,8100,FORM12,43           SBCD
00A00946                          1490m          C68     F1C0,81C0,FORM6D,42           DIVS
00A0094C                          1491m          C68     F1C0,80C0,FORM6D,41           DIVU
00A00952                          1492m          C68     F000,8000,FORM10,40           OR
00A00958                          1493m          C68     F100,7000,IMOVEQ,39           MOVEQ
00A0095E                          1494m          C68     FF00,6100,IBSR,51             BSR
00A00964                          1495m          C68     FF00,6000,IBSR,65             BRA
00A0096A                          1496m          C68     F000,6000,ICC,38              B
00A00970                          1497m          C68     F0F8,50C8,IDBCC,37              DB
00A00976                          1498m          C68     F0C0,50C0,ISCC,36             S
00A0097C                          1499m          C68     F100,5100,IQUICK,35           SUBQ
00A00982                          1500m          C68     F100,5000,IQUICK,34           ADDQ
00A00988                          1501m          C68     F1C0,41C0,FORM6A,33           LEA
00A0098E                          1502m          C68     F1C0,4180,FORM6D,32           CHK
00A00994                          1503m          C68     FFC0,4EC0,FORM11SL,31         JMP
00A0099A                          1504m          C68     FFC0,4E80,FORM11SL,30         JSR
00A009A0                          1505m          C68     FFFF,4E77,SCOMMON,29           RTR
00A009A6                          1506m          C68     FFFF,4E76,SCOMMON,28           TRAPV
00A009AC                          1507m          C68     FFFF,4E75,SCOMMON,27           RTS
00A009B2                          1508m          C68     FFFF,4E73,SCOMMON,26           RTE
00A009B8                          1509m          C68     FFFF,4E72,ISTOP,25             STOP
00A009BE                          1510m          C68     FFFF,4E71,SCOMMON,24           NOP
00A009C4                          1511m          C68     FFFF,4E70,SCOMMON,23           RESET
00A009CA                          1512m          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
00A009D0                          1513m          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
00A009D6                          1514m          C68     FFF8,4E58,FORM5,22            UNLINK
00A009DC                          1515m          C68     FFF8,4E50,ILINK,21            LINK
00A009E2                          1516m          C68     FFF0,4E40,FORM4,20            TRAP
00A009E8                          1517m          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
00A009EE                          1518m          C68     FFC0,4AC0,FORM1A,19           TAS
00A009F4                          1519m          C68     FF00,4A00,FORM1,18            TST
00A009FA                          1520m          C68     FFF8,48C0,FORM3,17            EXT.L
00A00A00                          1521m          C68     FFF8,4880,FORM3,16            EXT.W
00A00A06                          1522m          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
00A00A0C                          1523m          C68     FFF8,4840,FORM3,14            SWAP
00A00A12                          1524m          C68     FFC0,4840,FORM11,13           PEA
00A00A18                          1525m          C68     FFC0,4800,FORM1A,12           NBCD
00A00A1E                          1526m          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
00A00A24                          1527m          C68     FF00,4600,FORM1,11            NOT
00A00A2A                          1528m          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
00A00A30                          1529m          C68     FF00,4400,FORM1,10            NEG
00A00A36                          1530m          C68     FF00,4200,FORM1,9             CLR
00A00A3C                          1531m          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
00A00A42                          1532m          C68     FF00,4000,FORM1,8             NEGX
00A00A48                          1533m          C68     F000,3000,IMOVE,59            MOVE.W
00A00A4E                          1534m          C68     F000,2000,IMOVE,60            MOVE.L
00A00A54                          1535m          C68     F000,1000,IMOVE,58            MOVE.B
00A00A5A                          1536m          C68     FF00,0C00,IMMED,6             CMP       #
00A00A60                          1537m          C68     FF00,0A00,IMMED,5             EOR       #
00A00A66                          1538m          C68     FF00,0600,IMMED,4             ADD       #
00A00A6C                          1539m          C68     FF00,0400,IMMED,3             SUB       #
00A00A72                          1540m          C68     FF00,0200,IMMED,2             AND       #
00A00A78                          1541m          C68     FF00,0000,IMMED,1             OR        #
00A00A7E                          1542m          C68     F138,0108,IMOVEP,0            MOVEP
00A00A84                          1543m          C68     FFC0,08C0,ISETS,64            BSET
00A00A8A                          1544m          C68     FFC0,0880,ISETS,63            BCLR
00A00A90                          1545m          C68     FFC0,0840,ISETS,62            BCHG
00A00A96                          1546m          C68     FFC0,0800,ISETS,61            BTST
00A00A9C                          1547m          C68     F1C0,01C0,ISETD,64            BSET
00A00AA2                          1548m          C68     F1C0,0180,ISETD,63            BCLR
00A00AA8                          1549m          C68     F1C0,0140,ISETD,62            BCHG
00A00AAE                          1550m          C68     F1C0,0100,ISETD,61            BTST
00A00AB4                          1551  TBLE     DS      0
00A00AB4                          1552  
00A00AB4                          1553  N68      MACRO
00A00AB4                          1554           DC.B    '\1',128+'\2'        \1\2
00A00AB4                          1555           ENDM
00A00AB4                          1556  
00A00AB4                          1557  OPCTBL   DS      0
00A00AB4                          1558m          N68     MOVE,P    0
00A00AB9                          1559m          N68     O,R       1
00A00ABB                          1560m          N68     AN,D      2
00A00ABE                          1561m          N68     SU,B      3
00A00AC1                          1562m          N68     AD,D      4
00A00AC4                          1563m          N68     EO,R      5
00A00AC7                          1564m          N68     CM,P      6
00A00ACA                          1565m          N68     MOV,E     7
00A00ACE                          1566m          N68     NEG,X     8
00A00AD2                          1567m          N68     CL,R      9
00A00AD5                          1568m          N68     NE,G      10
00A00AD8                          1569m          N68     NO,T      11
00A00ADB                          1570m          N68     NBC,D     12
00A00ADF                          1571m          N68     PEA.,L    13
00A00AE4                          1572m          N68     SWAP.,W   14
00A00AEA                          1573m          N68     MOVE,M    15
00A00AEF                          1574m          N68     EXT.,W    16
00A00AF4                          1575m          N68     EXT.,L    17
00A00AF9                          1576m          N68     TS,T      18
00A00AFC                          1577m          N68     TAS.,B    19
00A00B01                          1578m          N68     TRA,P     20
00A00B05                          1579m          N68     LIN,K     21
00A00B09                          1580m          N68     UNL,K     22
00A00B0D                          1581m          N68     RESE,T    23
00A00B12                          1582m          N68     NO,P      24
00A00B15                          1583m          N68     STO,P     25
00A00B19                          1584m          N68     RT,E      26
00A00B1C                          1585m          N68     RT,S      27
00A00B1F                          1586m          N68     TRAP,V    28
00A00B24                          1587m          N68     RT,R      29
00A00B27                          1588m          N68     JS,R      30
00A00B2A                          1589m          N68     JM,P      31
00A00B2D                          1590m          N68     CHK.,W    32
00A00B32                          1591m          N68     LEA.,L    33
00A00B37                          1592m          N68     ADD,Q     34
00A00B3B                          1593m          N68     SUB,Q     35
00A00B3F= D3                      1594           DC.B    128+'S'   36
00A00B40                          1595m          N68     D,B       37
00A00B42= C2                      1596           DC.B    128+'B'   38
00A00B43                          1597m          N68     MOVEQ.,L  .....39
00A00B4A                          1598m          N68     O,R       40
00A00B4C                          1599m          N68     DIVU.,W   41
00A00B52                          1600m          N68     DIVS.,W   42
00A00B58                          1601m          N68     SBC,D     43
00A00B5C                          1602m          N68     SU,B      44
00A00B5F                          1603m          N68     SUB,X     45
00A00B63                          1604m          N68     CMP,M     46
00A00B67                          1605m          N68     MULU.,W   47
00A00B6D                          1606m          N68     MULS.,W   48
00A00B73                          1607m          N68     ABC,D    49
00A00B77                          1608m          N68     EX,G      50
00A00B7A                          1609m          N68     BS,R      .....51
00A00B7D                          1610m          N68     NUL,L     .....52
00A00B81                          1611m          N68     ADD,X     53
00A00B85                          1612m          N68     A,S       54
00A00B87                          1613m          N68     L,S       55
00A00B89                          1614m          N68     R,O       56
00A00B8B                          1615m          N68     RO,X      57
00A00B8E                          1616m          N68     MOVE.,B   58
00A00B94                          1617m          N68     MOVE.,W   59
00A00B9A                          1618m          N68     MOVE.,L   60
00A00BA0                          1619m          N68     BTS,T     61
00A00BA4                          1620m          N68     BCH,G     62
00A00BA8                          1621m          N68     BCL,R     63
00A00BAC                          1622m          N68     BSE,T     64
00A00BB0                          1623m          N68     BR,A      65
00A00BB3                          1624  
00A00BB3= 00                      1625           DC.B    0              PAD BYTE
00A00BB4                          1626  
00A00BB4                          1627  
00A00BB4                          1628  
00A00BB4                          1629  ;   ORG $2000
00A00BB4                          1630  
00A00BB4  46FC 2700               1631  MAIN MOVE.W #INT_OFF,SR  ; INTERRUPT OFF, SUPERVISOR MODE SET
00A00BB8                          1632  
00A00BB8                          1633  ;      MOVE.L #RAMBASE+USER_STACK,SP ; INIT TOP OF USER STACK
00A00BB8                          1634  ;      movea.l #DOUT,a1
00A00BB8                          1635  ;      move.b #$FF,d2    ; with cpld
00A00BB8                          1636  ;      MOVE.B D2,(A1)    ; OFF LEDS
00A00BB8                          1637  
00A00BB8  6100 015E               1638        BSR INIT_ACIA         ; ACIA init
00A00BBC                          1639  
00A00BBC  6100 0AD0               1640        BSR VECINIT           ; EXCEPTION VECTOR init
00A00BC0                          1641  
00A00BC0  6100 01D0               1642        BSR SCROLL            ; NEW LINE
00A00BC4                          1643  
00A00BC4  6100 08A0               1644        BSR CLEAR_MON_RAM     ; Initialize 1Kbyte from RAMBASE with 0.
00A00BC8                          1645  
00A00BC8  47F9 00A01757           1646        LEA.L TITLE1.L,A3     ; print START MESSAGE
00A00BCE  6100 019A               1647        BSR PSTR
00A00BD2                          1648  
00A00BD2  2C79 000000C0           1649        MOVEA.L RAMBASE.L,A6  ; Initialize Monitor work area 
00A00BD8  2D7C 00000000 00A6      1650        MOVE.L #RAM,POINTER_NOW(A6)
00A00BE0  2D7C 00000400 00F0      1651        MOVE.L #RAM+$400,USER_PC(A6)    ; INIT USER PC TO START OF RAM
00A00BE8                          1652  
00A00BE8  2D7C 0000FFF4 00E6      1653        MOVE.L #SUPER_STACK+USER_STACK,USER_USP(A6) ; INIT USER STACK
00A00BF0  40C0                    1654        MOVE.W SR,D0
00A00BF2  3D40 00EA               1655        MOVE.W D0,USER_SR(A6) 
00A00BF6                          1656  
00A00BF6  42AE 0024               1657        CLR.L FLAG(A6)         ; CLEAR SYSTEM MONITOR FLAG
00A00BFA  46FC 2000               1658        MOVE.W #INT_ON,SR       ; ON INTERRUPT, SUPERVISOR MODE SET
00A00BFE                          1659  
00A00BFE  6100 019E               1660  loop  BSR SEND_PROMPT
00A00C02  6100 0152               1661        BSR CIN
00A00C06  B03C 0040               1662        CMP.B #$40,D0
00A00C0A  6D04                    1663        blt.S NO_CHANGE
00A00C0C                          1664  
00A00C0C  C03C 00DF               1665        AND.B #%11011111,D0
00A00C10                          1666  
00A00C10                          1667  NO_CHANGE
00A00C10                          1668  
00A00C10  B03C 004C               1669        CMP.B #'L',D0
00A00C14  6600 0008               1670        BNE NEXT1
00A00C18  6100 0202               1671        BSR READ_S_REC
00A00C1C  60E0                    1672        BRA LOOP
00A00C1E                          1673  
00A00C1E  B03C 0053               1674  NEXT1 CMP.B #'S',D0       
00A00C22  6600 0008               1675        BNE NEXT2
00A00C26  6100 09C2               1676        BSR VIEW_USP      ; VIEW USER STACK
00A00C2A  60D2                    1677        BRA LOOP
00A00C2C                          1678  
00A00C2C                          1679  
00A00C2C  B03C 0048               1680  NEXT2 CMP.B #'H',D0
00A00C30  6600 0008               1681        BNE NEXT3
00A00C34  6100 0306               1682        BSR HEX_DUMP
00A00C38  60C4                    1683        BRA LOOP
00A00C3A                          1684  
00A00C3A  B03C 004E               1685  NEXT3 CMP.B #'N',D0
00A00C3E  6600 0008               1686        BNE NEXT4
00A00C42  6100 036C               1687        BSR NEW_POINTER
00A00C46  60B6                    1688        BRA LOOP
00A00C48                          1689  
00A00C48  B03C 004A               1690  NEXT4 CMP.B #'J',D0
00A00C4C  6600 0008               1691        BNE NEXT5
00A00C50  6100 076C               1692        BSR JUMP
00A00C54  60A8                    1693        BRA LOOP
00A00C56                          1694  
00A00C56  B03C 005A               1695  NEXT5 CMP.B #'Z',D0
00A00C5A  6600 0008               1696        BNE NEXT6
00A00C5E  6100 0932               1697        BSR UPLOAD         ; PRINT_DEBUG <------ USE Z FOR UPLOAD BINARY IMAGE
00A00C62  609A                    1698        BRA LOOP
00A00C64                          1699  
00A00C64                          1700  
00A00C64  B03C 0046               1701  NEXT6 CMP.B #'F',D0
00A00C68  6600 0008               1702        BNE NEXT7
00A00C6C  6100 03DE               1703        BSR FILL_MEMORY
00A00C70  608C                    1704        BRA LOOP
00A00C72                          1705  
00A00C72  B03C 0045               1706  NEXT7 CMP.B #'E',D0
00A00C76  6600 000A               1707        BNE NEXT8
00A00C7A  6100 0444               1708        BSR EDIT_MEMORY
00A00C7E  6000 FF7E               1709        BRA LOOP
00A00C82                          1710  
00A00C82  B03C 0043               1711  NEXT8 CMP.B #'C',D0
00A00C86  6600 000A               1712        BNE NEXT9
00A00C8A  6100 03FA               1713        BSR CLEAR_MEMORY
00A00C8E  6000 FF6E               1714        BRA LOOP
00A00C92                          1715  
00A00C92  B03C 0051               1716  NEXT9 CMP.B #'Q',D0
00A00C96  6600 000A               1717        BNE NEXT10
00A00C9A  6100 0358               1718        BSR QUICK_HOME
00A00C9E  6000 FF5E               1719        BRA LOOP
00A00CA2                          1720  
00A00CA2  B03C 003F               1721  NEXT10 CMP.B #'?',D0
00A00CA6  6608                    1722         BNE.S NEXT11
00A00CA8  6100 04A4               1723         BSR HELP
00A00CAC  6000 FF50               1724         BRA LOOP
00A00CB0                          1725  
00A00CB0                          1726  
00A00CB0  B03C 0052               1727  NEXT11 CMP.B #'R',D0
00A00CB4  6608                    1728        BNE.S NEXT12
00A00CB6  6100 05C0               1729        BSR DISPLAY_REG
00A00CBA  6000 FF42               1730        BRA LOOP
00A00CBE                          1731  
00A00CBE  B03C 002E               1732  NEXT12 CMP.B #'.',D0
00A00CC2  6608                    1733        BNE.S NEXT13
00A00CC4  6100 07B4               1734        BSR MODIFY_REG
00A00CC8  6000 FF34               1735        BRA LOOP
00A00CCC                          1736  
00A00CCC  B03C 0044               1737  NEXT13 CMP.B #'D',D0
00A00CD0  6608                    1738         BNE.S NEXT14
00A00CD2  6100 0866               1739         BSR DISASSEMBLE
00A00CD6  6000 FF26               1740         BRA LOOP
00A00CDA                          1741  
00A00CDA  B03C 0041               1742  NEXT14 CMP.B #'A',D0
00A00CDE  6608                    1743         BNE.S NEXT15
00A00CE0  6100 08FC               1744         BSR ABOUT
00A00CE4  6000 FF18               1745         BRA LOOP
00A00CE8                          1746  
00A00CE8                          1747  
00A00CE8  B03C 0054               1748  NEXT15 CMP.B #'T',D0
00A00CEC  6608                    1749         BNE.S NEXT16
00A00CEE  6100 0732               1750         BSR TRACE_JUMP
00A00CF2  6000 FF0A               1751         BRA LOOP
00A00CF6                          1752  
00A00CF6  B03C 0047               1753  NEXT16 CMP.B #'G',D0
00A00CFA  6606                    1754         BNE.S NEXT17
00A00CFC  4EF9 00102000           1755         JMP $102000.L       ; USE G COMMAND FOR SIMPLE JUMP TO RAM
00A00D02                          1756  
00A00D02                          1757  
00A00D02  B03C 0042               1758  NEXT17 CMP.B #'B',D0
00A00D06  6604                    1759         BNE.S NEXT18
00A00D08  6000 094C               1760         BRA BOOT_RAM
00A00D0C                          1761  
00A00D0C  6100 006A               1762  NEXT18  BSR NEW_LINE
00A00D10  6100 00A6               1763        BSR SEND_TITLE
00A00D14  6000 FEE8               1764        bra loop
00A00D18                          1765  
00A00D18                          1766  ; INIT ACIA
00A00D18                          1767  
00A00D18  13FC 0003 00F00009      1768  INIT_ACIA  MOVE.B #3,ACIAC.L   ; RESET ACIA
00A00D20  303C 2710               1769             MOVE.W #10000,D0
00A00D24  51C8 FFFE               1770             DBRA  D0,*
00A00D28  13FC 0015 00F00009      1771             MOVE.B #$15,ACIAC.L   ; rts enabled 9600 8ne
00A00D30  4E75                    1772             RTS
00A00D32                          1773  
00A00D32  0839 0001 00F00009      1774  COUT      BTST.B #TDRE,ACIAC.L
00A00D3A  67F6                    1775            BEQ.S  COUT
00A00D3C  13C0 00F0000B           1776            MOVE.B D0,ACIAD.L
00A00D42  4E75                    1777            RTS
00A00D44                          1778  
00A00D44                          1779  
00A00D44  0839 0000 00F00009      1780  CINS      BTST.B #RDRF,ACIAC.L
00A00D4C  67F6                    1781            BEQ.S  CINS
00A00D4E  1039 00F0000B           1782            MOVE.B ACIAD.L,D0
00A00D54  4E75                    1783            RTS
00A00D56                          1784  
00A00D56                          1785  
00A00D56  0839 0000 00F00009      1786  CIN      BTST.B #RDRF,ACIAC.L
00A00D5E  67F6                    1787           BEQ.S  CIN
00A00D60  1039 00F0000B           1788           MOVE.B ACIAD.L,D0
00A00D66  61CA                    1789           BSR COUT
00A00D68  4E75                    1790           RTS
00A00D6A                          1791  
00A00D6A                          1792  ; A3 POINTED TO FIRST BYTE
00A00D6A                          1793  ; END WITH 0
00A00D6A                          1794  
00A00D6A  101B                    1795  PSTR     MOVE.B (A3)+,D0
00A00D6C  B03C 0000               1796           CMP.B  #0,D0
00A00D70  6704                    1797           BEQ.S PSTR1
00A00D72  61BE                    1798           BSR COUT
00A00D74  60F4                    1799           BRA.S PSTR
00A00D76                          1800  
00A00D76  4E75                    1801  PSTR1    RTS
00A00D78                          1802  
00A00D78                          1803  ; NEW LINE
00A00D78                          1804  
00A00D78  2F00                    1805  NEW_LINE MOVE.L D0,-(SP)
00A00D7A  103C 000D               1806           MOVE.B #CR,D0
00A00D7E  61B2                    1807           BSR COUT
00A00D80  103C 000A               1808           MOVE.B #LF,D0
00A00D84  61AC                    1809           BSR COUT
00A00D86  201F                    1810           MOVE.L (SP)+,D0
00A00D88  4E75                    1811           RTS
00A00D8A                          1812  
00A00D8A  103C 0020               1813  SPACE    MOVE.B #SP,D0
00A00D8E  61A2                    1814           BSR COUT
00A00D90  4E75                    1815           RTS
00A00D92                          1816  
00A00D92  323C 0019               1817  SCROLL   MOVE.W #25,D1
00A00D96  61E0                    1818  SCROLL1  BSR NEW_LINE
00A00D98  51C9 FFFC               1819           DBF D1,SCROLL1
00A00D9C  4E75                    1820           RTS
00A00D9E                          1821  
00A00D9E                          1822  SEND_PROMPT
00A00D9E  2C79 000000C0           1823          MOVEA.L RAMBASE.L,A6
00A00DA4  61D2                    1824          BSR NEW_LINE
00A00DA6  202E 00A6               1825          MOVE.L POINTER_NOW(A6),D0
00A00DAA  6100 017C               1826          BSR OUT6X
00A00DAE  47F9 00A01783           1827          LEA.L PROMPT.L,A3
00A00DB4  61B4                    1828          BSR PSTR
00A00DB6  4E75                    1829          RTS
00A00DB8                          1830  
00A00DB8  47F9 00A0173E           1831  SEND_TITLE LEA.L TITLE.L,A3
00A00DBE  61AA                    1832             BSR PSTR
00A00DC0  4E75                    1833             RTS
00A00DC2                          1834  
00A00DC2                          1835  ; S19 LOADER
00A00DC2                          1836  
00A00DC2                          1837  ; CONVERT ASCII LETTER TO 8-BIT VALUE
00A00DC2                          1838  
00A00DC2  0400 0030               1839  TO_HEX SUBI.B #$30,D0
00A00DC6  0C00 000A               1840         CMPI.B #$A,D0
00A00DCA  6B00 0008               1841         BMI  ZERO_TO_NINE
00A00DCE  C03C 00DF               1842         AND.B #%11011111,D0
00A00DD2  5F00                    1843         SUBI.B #7,D0
00A00DD4                          1844  
00A00DD4                          1845  ZERO_TO_NINE
00A00DD4                          1846  
00A00DD4  1200                    1847         MOVE.B D0,D1
00A00DD6                          1848  
00A00DD6  4E75                    1849          RTS
00A00DD8                          1850  
00A00DD8                          1851  ; READ TWO BYTES ASCII AND CONVERT TO SINGLE BYTE DATA
00A00DD8                          1852  
00A00DD8                          1853  ; ENTRY: D0 FROM CIN 
00A00DD8                          1854  ; EXIT: D1 8-BIT VALUE 
00A00DD8                          1855  ;       
00A00DD8                          1856  
00A00DD8                          1857  
00A00DD8  6100 FF7C               1858  GET_HEX  BSR CIN
00A00DDC                          1859  
00A00DDC  B03C 0020               1860           CMP.B #' ',D0         ; IF BIT_ESC PRESSED
00A00DE0  6608                    1861           BNE.S GET_HEX1
00A00DE2  08EE 0000 0024          1862           BSET.B #BIT_ESC,FLAG(A6)
00A00DE8  4E75                    1863           RTS
00A00DEA                          1864  
00A00DEA                          1865  
00A00DEA  B03C 000D               1866  GET_HEX1 CMP.B #CR,D0
00A00DEE  6608                    1867           BNE.S GET_HEX2
00A00DF0  08EE 0001 0024          1868           BSET.B #1,FLAG(A6)       ; ENTER PRESSED
00A00DF6  4E75                    1869           RTS
00A00DF8                          1870  
00A00DF8                          1871  
00A00DF8  61C8                    1872  GET_HEX2 BSR TO_HEX
00A00DFA  E919                    1873           ROL.B #4,D1
00A00DFC  1401                    1874           MOVE.B D1,D2
00A00DFE  6100 FF56               1875           BSR CIN
00A00E02  61BE                    1876           BSR TO_HEX
00A00E04  D202                    1877           ADD.B D2,D1
00A00E06  4E75                    1878           RTS
00A00E08                          1879  
00A00E08                          1880  
00A00E08  6100 FF3A               1881  GET_HEXS   BSR CINS
00A00E0C  61B4                    1882           BSR TO_HEX
00A00E0E  E919                    1883           ROL.B #4,D1
00A00E10  1401                    1884           MOVE.B D1,D2
00A00E12  6100 FF30               1885           BSR CINS
00A00E16  61AA                    1886           BSR TO_HEX
00A00E18  D202                    1887           ADD.B D2,D1
00A00E1A  4E75                    1888           RTS
00A00E1C                          1889  
00A00E1C                          1890  ;
00A00E1C                          1891  ;S214000400227C00400001143C00006100002C128297
00A00E1C                          1892  ;S804000000FB
00A00E1C                          1893  
00A00E1C                          1894  ; READ S-RECORD
00A00E1C                          1895  ; D5 = BYTE CHECK SUM FOR EACH RECORD
00A00E1C                          1896  ; D4 = NUMBER OF BYTE RECEIVED
00A00E1C                          1897  
00A00E1C  47F9 00A018A7           1898  READ_S_REC      LEA.L LOAD.L,A3
00A00E22  6100 FF46               1899                  BSR PSTR
00A00E26  4284                    1900                  CLR.L D4     ; CLEAR NUMBER OF BYTE 
00A00E28  4285                    1901                  CLR.L D5     ; CLEAR CHECK SUM AND ERROR BYTE
00A00E2A                          1902  
00A00E2A  6100 FF18               1903  READ_S_REC1     BSR CINS
00A00E2E  B03C 0053               1904                  CMP.B #'S',D0
00A00E32  6602                    1905                  BNE.S CHECK_ESC
00A00E34  6008                    1906                  BRA.S GET_TYPE
00A00E36                          1907  
00A00E36                          1908  
00A00E36  B03C 001B               1909  CHECK_ESC       CMP.B #ESC,D0
00A00E3A  66EE                    1910                  BNE.S READ_S_REC1
00A00E3C                          1911  
00A00E3C  4E75                    1912                  RTS
00A00E3E                          1913  
00A00E3E                          1914  
00A00E3E  6100 FF04               1915  GET_TYPE        BSR CINS
00A00E42  B03C 0038               1916                  CMP.B #'8',D0
00A00E46  6600 003A               1917                  BNE CHECK_START
00A00E4A                          1918  
00A00E4A  6100 FEF8               1919  WAIT_CR         BSR CINS
00A00E4E  B03C 000A               1920                  CMP.B #LF,D0
00A00E52  66F6                    1921                  BNE.S WAIT_CR
00A00E54                          1922  
00A00E54  6100 FF22               1923                  BSR NEW_LINE
00A00E58  6100 FF1E               1924                  BSR NEW_LINE
00A00E5C  2004                    1925                  MOVE.L D4,D0
00A00E5E  6100 02FA               1926                  BSR PRINT_DEC     ; SHOW NUMBER OF BYTE RECEIVED
00A00E62  267C 00A018DC           1927                  MOVEA.L #NUMBER,A3
00A00E68  6100 FF00               1928                  BSR PSTR
00A00E6C                          1929  
00A00E6C  4845                    1930                  SWAP.W D5
00A00E6E  4280                    1931                  CLR.L D0
00A00E70  3005                    1932                  MOVE.W D5,D0
00A00E72  6100 02E6               1933                  BSR PRINT_DEC
00A00E76  267C 00A018EC           1934                  MOVEA.L #ERROR,A3
00A00E7C  6100 FEEC               1935                  BSR PSTR
00A00E80  4E75                    1936                  RTS
00A00E82                          1937  
00A00E82                          1938  
00A00E82  B03C 0032               1939  CHECK_START     CMP.B #'2',D0
00A00E86  6708                    1940                  BEQ.S START_FOUND
00A00E88                          1941  
00A00E88  B03C 0030               1942                  CMP.B #'0',D0
00A00E8C  679C                    1943                  BEQ.S READ_S_REC1
00A00E8E  609A                    1944                  BRA.S READ_S_REC1
00A00E90                          1945  
00A00E90                          1946  
00A00E90  4245                    1947  START_FOUND     CLR.W D5          ; CLEAR BYTE CHECK SUM
00A00E92                          1948  
00A00E92  6100 FF74               1949                  BSR GET_HEXS
00A00E96  4287                    1950                  CLR.L D7
00A00E98  1E01                    1951                  MOVE.B D1,D7       ; NUMBER OF BYTE SAVED TO D7
00A00E9A  5B07                    1952                  SUBQ.B #5,D7
00A00E9C  2007                    1953                  MOVE.L D7,D0
00A00E9E                          1954  
00A00E9E  DA01                    1955                  ADD.B  D1,D5       ; ADD CHECK SUM
00A00EA0                          1956  
00A00EA0                          1957  ; GET 24-BIT ADDRESS, SAVE TO A6
00A00EA0                          1958  
00A00EA0  4286                    1959                CLR.L D6
00A00EA2  6100 FF64               1960                BSR GET_HEXS
00A00EA6  1C01                    1961                MOVE.B D1,D6
00A00EA8  DA01                    1962                ADD.B  D1,D5
00A00EAA                          1963  
00A00EAA  E19E                    1964                ROL.L #8,D6
00A00EAC  6100 FF5A               1965                BSR GET_HEXS
00A00EB0  1C01                    1966                MOVE.B D1,D6
00A00EB2  DA01                    1967                ADD.B D1,D5
00A00EB4                          1968  
00A00EB4  E19E                    1969                ROL.L #8,D6
00A00EB6                          1970  
00A00EB6  6100 FF50               1971                BSR GET_HEXS
00A00EBA  1C01                    1972                MOVE.B D1,D6
00A00EBC  DA01                    1973                ADD.B D1,D5
00A00EBE                          1974  
00A00EBE  2C46                    1975                MOVEA.L D6,A6
00A00EC0                          1976                           
00A00EC0  6100 FF46               1977  READ_DATA     BSR GET_HEXS
00A00EC4  DA01                    1978                ADD.B  D1,D5      ; ADD CHECK SUM
00A00EC6  1CC1                    1979                MOVE.B D1,(A6)+
00A00EC8                          1980  
00A00EC8  4601                    1981                not.b d1          ; complement before sending
00A00ECA                          1982  
00A00ECA                          1983                ;MOVE.B D1,DOUT.L  ; INDICATOR WHILE LOADING
00A00ECA                          1984  
00A00ECA  5284                    1985                ADDQ.L #1,D4      ; BUMP NUMBER OF BYTE RECEIVED
00A00ECC  51CF FFF2               1986                DBF D7,READ_DATA
00A00ED0                          1987  
00A00ED0  4605                    1988                NOT.B D5          ; ONE'S COMPLEMENT OF BYTE CHECK SUM         
00A00ED2                          1989  
00A00ED2  6100 FF34               1990                BSR GET_HEXS      ; GET BYTE CHECK SUM
00A00ED6                          1991  
00A00ED6  BA01                    1992                CMP.B D1,D5       ; COMPARE CHECK SUM
00A00ED8  670C                    1993                BEQ.S NO_ERROR
00A00EDA                          1994  
00A00EDA  0685 00010000           1995                ADD.L #$10000,D5  ; ADD 1 TO UPPER WORD
00A00EE0  103C 0058               1996                MOVE.B #'X',D0    ; IF NOT EQUAL SEND 'X' FOR ERROR
00A00EE4  6004                    1997                BRA.S CHECKSUM_ERROR
00A00EE6                          1998  
00A00EE6  103C 005F               1999  NO_ERROR      MOVE.B #'_',D0      ; '_' NO ERROR RECORD
00A00EEA  6100 FE46               2000  CHECKSUM_ERROR BSR COUT
00A00EEE                          2001  
00A00EEE  6000 FF3A               2002                BRA READ_S_REC1
00A00EF2                          2003  
00A00EF2                          2004  
00A00EF2  6100 FE62               2005  LOOP_BACK     BSR CIN
00A00EF6  B03C 000D               2006                CMP.B #13,D0
00A00EFA  66F6                    2007                BNE LOOP_BACK
00A00EFC  4E75                    2008                RTS
00A00EFE                          2009  
00A00EFE                          2010  
00A00EFE                          2011  
00A00EFE                          2012  ; PRINT HEX 
00A00EFE                          2013  ; OUT1X = PRINT ONE HEX
00A00EFE                          2014  ; OUT2X = PRINT TWO
00A00EFE                          2015  ; OUT4X = PRINT FOUR
00A00EFE                          2016  ; OUT8X = PRINT EIGHT
00A00EFE                          2017  ; ENTRY: D0
00A00EFE                          2018  
00A00EFE  1F00                    2019  OUT1X        MOVE.B D0,-(SP)    ;SAVE D0
00A00F00  C03C 000F               2020               AND.B #$F,D0
00A00F04  0600 0030               2021               ADD.B #'0',D0
00A00F08  B03C 0039               2022               CMP.B #'9',D0
00A00F0C  6302                    2023               BLS.S   OUT1X1
00A00F0E  5E00                    2024               ADD.B #7,D0
00A00F10  6100 FE20               2025  OUT1X1       BSR COUT
00A00F14  101F                    2026               MOVE.B (SP)+,D0    ;RESTORE D0
00A00F16  4E75                    2027               RTS
00A00F18                          2028  
00A00F18  E818                    2029  OUT2X        ROR.B #4,D0
00A00F1A  61E2                    2030               BSR.S OUT1X
00A00F1C  E918                    2031               ROL.B #4,D0
00A00F1E  60DE                    2032               BRA OUT1X
00A00F20                          2033  
00A00F20  E058                    2034  OUT4X        ROR.W #8,D0
00A00F22  61F4                    2035               BSR.S OUT2X
00A00F24  E158                    2036               ROL.W #8,D0
00A00F26  60F0                    2037               BRA.S OUT2X
00A00F28                          2038  
00A00F28  4840                    2039  OUT6X        SWAP.W D0        ; OUT 24-BIT HEX NUMBER
00A00F2A  61EC                    2040               BSR.S OUT2X
00A00F2C  4840                    2041               SWAP.W D0
00A00F2E  60F0                    2042               BRA.S OUT4X
00A00F30                          2043  
00A00F30  4840                    2044  OUT8X        SWAP.W D0        ; OUT 32-BIT HEX NUMBER
00A00F32  61EC                    2045               BSR.S  OUT4X
00A00F34  4840                    2046               SWAP.W D0
00A00F36  60E8                    2047               BRA.S  OUT4X
00A00F38                          2048  
00A00F38                          2049  
00A00F38                          2050  ; PRINT D0 CONTENT
00A00F38                          2051  
00A00F38  61F6                    2052  PRINT_D0  BSR.S OUT8X
00A00F3A  4E75                    2053            RTS
00A00F3C                          2054  
00A00F3C                          2055  ; HEX DUMP
00A00F3C                          2056  ; DUMP MEMORY CONTENT
00A00F3C                          2057  ; A3: START ADDRESS
00A00F3C                          2058  
00A00F3C  47F9 00A0185E           2059  HEX_DUMP    LEA.L HEX.L,A3
00A00F42  6100 FE26               2060              BSR PSTR
00A00F46                          2061  
00A00F46  2C79 000000C0           2062              MOVEA.L RAMBASE.L,A6
00A00F4C  266E 00A6               2063              MOVEA.L POINTER_NOW(A6),A3
00A00F50  3C3C 000F               2064              MOVE.W #15,D6
00A00F54  6100 FE22               2065              BSR NEW_LINE
00A00F58                          2066  
00A00F58  6100 FE1E               2067  HEX_DUMP2   BSR NEW_LINE
00A00F5C  200B                    2068              MOVE.L A3,D0
00A00F5E  61C8                    2069              BSR OUT6X
00A00F60  6100 FE28               2070              BSR SPACE
00A00F64  6100 FE24               2071              BSR SPACE
00A00F68                          2072  
00A00F68  3E3C 000F               2073              MOVE.W #15,D7
00A00F6C                          2074  
00A00F6C  101B                    2075  HEX_DUMP1   MOVE.B (A3)+,D0
00A00F6E  61A8                    2076              BSR OUT2X
00A00F70  6100 FE18               2077              BSR SPACE
00A00F74                          2078  
00A00F74  51CF FFF6               2079              DBF D7,HEX_DUMP1
00A00F78                          2080  
00A00F78  6100 FE10               2081              BSR SPACE
00A00F7C  97FC 00000010           2082              SUBA.L #16,A3       ; GET BACK TO BEGINING 
00A00F82  3E3C 000F               2083              MOVE.W #15,D7
00A00F86                          2084  
00A00F86  101B                    2085  HEX_DUMP6   MOVE.B (A3)+,D0
00A00F88                          2086  
00A00F88  B03C 0020               2087              CMP.B #$20,D0
00A00F8C  6C06                    2088              BGE.S HEX_DUMP3
00A00F8E                          2089  
00A00F8E  103C 002E               2090  HEX_DUMP4   MOVE.B #'.',D0
00A00F92  6006                    2091              BRA.S  HEX_DUMP5
00A00F94                          2092  
00A00F94  B03C 007F               2093  HEX_DUMP3   CMP.B #$7F,D0
00A00F98  6EF4                    2094              BGT.S HEX_DUMP4
00A00F9A                          2095  
00A00F9A  6100 FD96               2096  HEX_DUMP5   BSR COUT
00A00F9E  51CF FFE6               2097              DBF D7,HEX_DUMP6
00A00FA2                          2098  
00A00FA2                          2099  
00A00FA2  51CE FFB4               2100              DBF D6,HEX_DUMP2
00A00FA6                          2101  
00A00FA6  2D4B 00A6               2102              MOVE.L A3,POINTER_NOW(A6)   ; UPDATE POINTER_NOW
00A00FAA  6100 FDCC               2103              BSR NEW_LINE
00A00FAE  4E75                    2104              RTS
00A00FB0                          2105  
00A00FB0                          2106  
00A00FB0                          2107  ; NEW POINTER
00A00FB0                          2108  ; CHANGE 24-BIT ADDRESS-> POINTER_NOW
00A00FB0                          2109  
00A00FB0  47F9 00A01825           2110  NEW_POINTER   LEA.L NEW.L,A3
00A00FB6  6100 FDB2               2111                BSR PSTR
00A00FBA                          2112  
00A00FBA  6100 FDE2               2113                BSR SEND_PROMPT
00A00FBE                          2114  
00A00FBE  2C79 000000C0           2115                MOVEA.L RAMBASE.L,A6
00A00FC4  4286                    2116                CLR.L D6
00A00FC6  6100 FE10               2117                BSR GET_HEX
00A00FCA  1C01                    2118                MOVE.B D1,D6
00A00FCC  E19E                    2119                ROL.L #8,D6
00A00FCE  6100 FE08               2120                BSR GET_HEX
00A00FD2  1C01                    2121                MOVE.B D1,D6
00A00FD4  E19E                    2122                ROL.L #8,D6
00A00FD6  6100 FE00               2123                BSR GET_HEX
00A00FDA  1C01                    2124                MOVE.B D1,D6
00A00FDC                          2125  
00A00FDC  0886 0000               2126                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00A00FE0                          2127  
00A00FE0  2D46 00A6               2128                MOVE.L D6,POINTER_NOW(A6)
00A00FE4  4E75                    2129                RTS
00A00FE6                          2130  
00A00FE6  6100 FD90               2131  PRINT_DEBUG   BSR NEW_LINE
00A00FEA  202E 0020               2132                MOVE.L DEBUG(A6),D0
00A00FEE  6100 FF40               2133                BSR OUT8X
00A00FF2  4E75                    2134                RTS
00A00FF4                          2135  
00A00FF4  47F9 00A01837           2136  QUICK_HOME    LEA.L QUICK.L,A3
00A00FFA  6100 FD6E               2137                BSR PSTR
00A00FFE  2C79 000000C0           2138                MOVEA.L RAMBASE.L,A6
00A01004  2D7C 00000000 00A6      2139                MOVE.L #RAM,POINTER_NOW(A6)
00A0100C  4E75                    2140                RTS  
00A0100E                          2141  
00A0100E                          2142  ; TEST RAM
00A0100E                          2143  
00A0100E                          2144  ; GET 32BIT DATA
00A0100E                          2145  ; EXIT: D6 CONTAINS 32-BIT ADDRESS
00A0100E                          2146  
00A0100E  4286                    2147  GET_32BIT     CLR.L D6
00A01010  6100 FDC6               2148                BSR GET_HEX
00A01014  1C01                    2149                MOVE.B D1,D6
00A01016  E19E                    2150                ROL.L #8,D6
00A01018  6100 FDBE               2151                BSR GET_HEX
00A0101C  1C01                    2152                MOVE.B D1,D6
00A0101E  E19E                    2153                ROL.L #8,D6
00A01020  6100 FDB6               2154                BSR GET_HEX
00A01024  1C01                    2155                MOVE.B D1,D6
00A01026  E19E                    2156                ROL.L #8,D6
00A01028  6100 FDAE               2157                BSR GET_HEX
00A0102C  1C01                    2158                MOVE.B D1,D6
00A0102E  4E75                    2159                RTS
00A01030                          2160  
00A01030                          2161  
00A01030                          2162  ; GET_ADDRESS
00A01030                          2163  ; EXIT: D6 CONTAINS 24-BIT ADDRESS
00A01030                          2164  
00A01030  4286                    2165  GET_ADDRESS   CLR.L D6
00A01032  6100 FDA4               2166                BSR GET_HEX
00A01036                          2167  
00A01036  1C01                    2168  GET_ADDRESS1  MOVE.B D1,D6
00A01038  E19E                    2169                ROL.L #8,D6
00A0103A  6100 FD9C               2170                BSR GET_HEX
00A0103E  1C01                    2171                MOVE.B D1,D6
00A01040  E19E                    2172                ROL.L #8,D6
00A01042  6100 FD94               2173                BSR GET_HEX
00A01046  1C01                    2174                MOVE.B D1,D6
00A01048  4E75                    2175                RTS
00A0104A                          2176  
00A0104A  4E75                    2177  TEST_RAM      RTS
00A0104C                          2178  
00A0104C                          2179  ; FILL MEMORY WITH 0xFF
00A0104C                          2180  
00A0104C  47F9 00A0179D           2181  FILL_MEMORY   LEA.L FILL.L,A3
00A01052  6100 FD16               2182                BSR PSTR
00A01056                          2183  
00A01056  47F9 00A017B4           2184                LEA.L START.L,A3
00A0105C  6100 FD0C               2185                BSR PSTR
00A01060  61CE                    2186                BSR GET_ADDRESS
00A01062  2846                    2187                MOVEA.L D6,A4             ; A4 START ADDRESS
00A01064                          2188  
00A01064  47F9 00A017C6           2189                LEA.L STOP.L,A3
00A0106A  6100 FCFE               2190                BSR PSTR
00A0106E  61C0                    2191                BSR GET_ADDRESS
00A01070  2A46                    2192                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00A01072                          2193  
00A01072  38FC FFFF               2194  FILL_MEMORY1  MOVE.W #$FFFF,(A4)+
00A01076  BBCC                    2195                CMPA.L A4,A5
00A01078  6CF8                    2196                BGE.S FILL_MEMORY1
00A0107A                          2197  
00A0107A  267C 00A017D7           2198                MOVEA.L #DONE,A3
00A01080  6100 FCE8               2199                BSR PSTR
00A01084  4E75                    2200                RTS
00A01086                          2201  
00A01086                          2202  ; CLEAR MEMORY WITH 0x00
00A01086                          2203  
00A01086  47F9 00A01785           2204  CLEAR_MEMORY  LEA.L CLEAR.L,A3
00A0108C  6100 FCDC               2205                BSR PSTR
00A01090                          2206  
00A01090  47F9 00A017B4           2207                LEA.L START.L,A3
00A01096  6100 FCD2               2208                BSR PSTR
00A0109A  6194                    2209                BSR GET_ADDRESS
00A0109C  2846                    2210                MOVEA.L D6,A4             ; A4 START ADDRESS
00A0109E                          2211  
00A0109E  47F9 00A017C6           2212                LEA.L STOP.L,A3
00A010A4  6100 FCC4               2213                BSR PSTR
00A010A8  6186                    2214                BSR GET_ADDRESS
00A010AA  2A46                    2215                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00A010AC                          2216  
00A010AC  38FC 0000               2217  CLEAR_MEMORY1 MOVE.W #$0000,(A4)+
00A010B0  BBCC                    2218                CMPA.L A4,A5
00A010B2  6CF8                    2219                BGE.S CLEAR_MEMORY1
00A010B4                          2220  
00A010B4  267C 00A017D7           2221                MOVEA.L #DONE,A3
00A010BA  6100 FCAE               2222                BSR PSTR
00A010BE  4E75                    2223                RTS
00A010C0                          2224  
00A010C0                          2225  ; EDIT MEMORY
00A010C0                          2226  ; PRESS SPACE BAR TO QUIT
00A010C0                          2227  
00A010C0  47F9 00A017E1           2228  EDIT_MEMORY   LEA.L EDIT1.L,A3
00A010C6  6100 FCA2               2229                BSR PSTR
00A010CA                          2230  
00A010CA  47F9 00A01813           2231                LEA.L EDIT.L,A3
00A010D0  6100 FC98               2232                BSR PSTR
00A010D4  6100 FF5A               2233                BSR GET_ADDRESS
00A010D8                          2234  
00A010D8  0886 0000               2235                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00A010DC  2646                    2236                MOVEA.L D6,A3       ; EDIT ADDRESS
00A010DE                          2237  
00A010DE                          2238               ; MOVEA.L POINTER_NOW.L,A3
00A010DE                          2239  
00A010DE  6100 FC98               2240  EDIT_MEMORY2  BSR NEW_LINE
00A010E2  200B                    2241                MOVE.L A3,D0
00A010E4  6100 FE42               2242                BSR OUT6X
00A010E8  6100 FCA0               2243                BSR SPACE
00A010EC  6100 FC9C               2244                BSR SPACE
00A010F0                          2245  
00A010F0  103C 005B               2246                MOVE.B #'[',D0
00A010F4  6100 FC3C               2247                BSR COUT
00A010F8  3013                    2248                MOVE.W (A3),D0
00A010FA  6100 FE24               2249                BSR OUT4X
00A010FE  103C 005D               2250                MOVE.B #']',D0
00A01102  6100 FC2E               2251                BSR COUT
00A01106                          2252  
00A01106  6100 FC82               2253                BSR SPACE
00A0110A                          2254  
00A0110A  4241                    2255                CLR.W D1
00A0110C  6100 FCCA               2256                BSR GET_HEX
00A01110                          2257  
00A01110  08AE 0000 0024          2258                BCLR.B #BIT_ESC,FLAG(A6)  ; TEST BIT_ESC BIT
00A01116  6630                    2259                BNE.S EDIT_MEMORY3  ; IF BIT = 1 THEN EXIT
00A01118                          2260  
00A01118  08AE 0001 0024          2261                BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00A0111E  6624                    2262                BNE.S EDIT_MEMORY4  ; SKIP WRITE TO RAM
00A01120                          2263  
00A01120  E159                    2264                ROL.W #8,D1
00A01122  6100 FCB4               2265                BSR GET_HEX
00A01126                          2266  
00A01126  36BC 0000               2267                MOVE.W #0,(A3)
00A0112A                          2268  
00A0112A  3013                    2269                MOVE.W (A3),D0   ; TEST RAM OR ROM BY WRITING 0 AND READ BACK
00A0112C  B07C 0000               2270                CMP.W #0,D0
00A01130  6604                    2271                BNE.S EDIT_MEMORY5
00A01132                          2272  
00A01132  3681                    2273                MOVE.W D1,(A3)     ; OK WRITE TO RAM
00A01134  600E                    2274                BRA.S EDIT_MEMORY4 
00A01136                          2275  
00A01136  2F0B                    2276  EDIT_MEMORY5  MOVE.L A3,-(SP)
00A01138  47F9 00A0181F           2277                LEA.L ROM.L,A3
00A0113E  6100 FC2A               2278                BSR PSTR
00A01142  265F                    2279                MOVEA.L (SP)+,A3
00A01144                          2280  
00A01144  548B                    2281  EDIT_MEMORY4  ADDQ.L #2,A3     ; BUMP A3
00A01146                          2282  
00A01146  6096                    2283                BRA.S EDIT_MEMORY2
00A01148                          2284  
00A01148  6100 FC2E               2285  EDIT_MEMORY3  BSR NEW_LINE
00A0114C  4E75                    2286                RTS
00A0114E                          2287  
00A0114E                          2288  
00A0114E                          2289  ; HELP LIST MONITOR COMMANDS
00A0114E                          2290  
00A0114E  47F9 00A01AAB           2291  HELP          LEA.L HELP_LIST.L,A3
00A01154  6100 FC14               2292                BSR PSTR
00A01158  4E75                    2293                RTS
00A0115A                          2294  
00A0115A                          2295  ;----------------------------------------------------------------------
00A0115A                          2296  ; PRINT_DEC
00A0115A                          2297  ; D0 32-BIT BINARY NUMBER
00A0115A                          2298  
00A0115A  2F00                    2299  PRINT_DEC MOVE.L D0,-(SP)  ; SAVE D0
00A0115C  2C79 000000C0           2300            MOVEA.L RAMBASE.L,A6
00A01162  DDFC 00000026           2301            ADDA.L #BUFFER,A6
00A01168  6100 0016               2302            BSR HEX2DEC
00A0116C  2679 000000C0           2303            MOVEA.L RAMBASE.L,A3
00A01172  D7FC 00000026           2304            ADDA.L #BUFFER,A3
00A01178  6100 FBF0               2305            BSR PSTR
00A0117C  201F                    2306            MOVE.L (SP)+,D0 ; RESTORE D0
00A0117E  4E75                    2307            RTS
00A01180                          2308  
00A01180                          2309  ;**************************************************************************
00A01180                          2310  ; The portion of code within STAR lines are modified from Tutor source code
00A01180                          2311  ;
00A01180                          2312  ;
00A01180                          2313  ; HEX2DEC   HEX2DEC convert hex to decimal                   
00A01180                          2314  ; CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
00A01180                          2315  
00A01180  48E7 7F00               2316  HEX2DEC  MOVEM.L D1-D7,-(SP)   ;SAVE REGISTERS
00A01184  2E00                    2317           MOVE.L  D0,D7               ;SAVE IT HERE
00A01186  6A08                    2318           BPL.S   HX2DC
00A01188  4487                    2319           NEG.L   D7             ;CHANGE TO POSITIVE
00A0118A  6B4E                    2320           BMI.S   HX2DC57        ;SPECIAL CASE (-0)
00A0118C  1CFC 002D               2321           MOVE.B  #'-',(A6)+     ;PUT IN NEG SIGN
00A01190  4244                    2322  HX2DC    CLR.W   D4             ;FOR ZERO SURPRESS
00A01192  7C0A                    2323           MOVEQ.L   #10,D6         ;COUNTER
00A01194  7401                    2324  HX2DC0   MOVEQ.L   #1,D2          ;VALUE TO SUB
00A01196  2206                    2325           MOVE.L  D6,D1          ;COUNTER
00A01198  5381                    2326           SUBQ.L  #1,D1          ;ADJUST - FORM POWER OF TEN
00A0119A  671A                    2327           BEQ.S   HX2DC2         ;IF POWER IS ZERO
00A0119C  3602                    2328  HX2DC1   MOVE.W  D2,D3          ;D3=LOWER WORD
00A0119E  C6FC 000A               2329           MULU.W    #10,D3
00A011A2  4842                    2330           SWAP.W    D2             ;D2=UPPER WORD
00A011A4  C4FC 000A               2331           MULU.W    #10,D2
00A011A8  4843                    2332           SWAP.W    D3             ;ADD UPPER TO UPPER
00A011AA  D443                    2333           ADD.W   D3,D2
00A011AC  4842                    2334           SWAP.W    D2             ;PUT UPPER IN UPPER
00A011AE  4843                    2335           SWAP.W    D3             ;PUT LOWER IN LOWER
00A011B0  3403                    2336           MOVE.W  D3,D2          ;D2=UPPER & LOWER
00A011B2  5381                    2337           SUBQ.L  #1,D1
00A011B4  66E6                    2338           BNE     HX2DC1
00A011B6  4280                    2339  HX2DC2   CLR.L   D0             ;HOLDS SUB AMT
00A011B8  BE82                    2340  HX2DC22  CMP.L   D2,D7
00A011BA  6D06                    2341           BLT.S   HX2DC3         ;IF NO MORE SUB POSSIBLE
00A011BC  5280                    2342           ADDQ.L  #1,D0          ;BUMP SUBS
00A011BE  9E82                    2343           SUB.L   D2,D7          ;COUNT DOWN BY POWERS OF TEN
00A011C0  60F6                    2344           BRA.S   HX2DC22        ;DO MORE
00A011C2  4A00                    2345  HX2DC3   TST.B   D0             ;ANY VALUE?
00A011C4  6604                    2346           BNE.S   HX2DC4
00A011C6  4A44                    2347           TST.W   D4             ;ZERO SURPRESS
00A011C8  6708                    2348           BEQ.S   HX2DC5
00A011CA  0600 0030               2349  HX2DC4   ADDI.B  #$30,D0        ;BINARY TO ASCII
00A011CE  1CC0                    2350           MOVE.B  D0,(A6)+       ;PUT IN BUFFER
00A011D0  1800                    2351           MOVE.B  D0,D4          ;MARK AS NON ZERO SURPRESS
00A011D2  5386                    2352  HX2DC5   SUBQ.L  #1,D6          ;NEXT POWER
00A011D4  66BE                    2353           BNE     HX2DC0
00A011D6  4A44                    2354           TST.W   D4             ;SEE IF ANYTHING PRINTED
00A011D8  6604                    2355           BNE.S   HX2DC6
00A011DA  1CFC 0030               2356  HX2DC57  MOVE.B  #'0',(A6)+     ;PRINT AT LEST A ZERO
00A011DE  1CBC 0000               2357  HX2DC6   MOVE.B  #0,(A6)        ; PUT TERMINATOR
00A011E2  4CDF 00FE               2358           MOVEM.L (SP)+,D1-D7   ;RESTORE REGISTERS
00A011E6  4E75                    2359           RTS                    ;END OF ROUTINE
00A011E8                          2360  
00A011E8                          2361  *
00A011E8                          2362  *  PRINT HEX ROUTINES
00A011E8                          2363  *
00A011E8                          2364  *
00A011E8                          2365  * PRINT 8 HEX CHARACTERS
00A011E8                          2366  *
00A011E8                          2367  *  D0,D1,D2 DESTROYED
00A011E8                          2368  *
00A011E8  4840                    2369  PNT8HX   SWAP    D0             FLIP REG HALVES
00A011EA  610A                    2370           BSR.S   PNT4HX         DO TOP WORD
00A011EC  4840                    2371           SWAP    D0             NOW DO LOWER WORD
00A011EE  6006                    2372           BRA.S   PNT4HX
00A011F0                          2373  * PRINT 6 HEX CHARACTERS
00A011F0  4840                    2374  PNT6HX   SWAP    D0             FLIP REGISTER HALVES
00A011F2  610A                    2375           BSR.S   PNT2HX
00A011F4  4840                    2376           SWAP    D0             FLIP BACK REG HALVES
00A011F6                          2377  * PRINT 4 HEX CHARACTERS IN D0.W
00A011F6  3200                    2378  PNT4HX   MOVE.W  D0,D1          SAVE IN TEMP
00A011F8  E058                    2379           ROR.W   #8,D0          GET BITS 15-8 INTO LOWER BYTE
00A011FA  6102                    2380           BSR.S   PNT2HX         PRINT IT
00A011FC  3001                    2381           MOVE.W  D1,D0          PULL IT BACK
00A011FE                          2382  * PRINT 2 HEX CHARACTERS IN D0.B
00A011FE  3400                    2383  PNT2HX   MOVE.W  D0,D2          SAVE IN TEMP REG
00A01200  E850                    2384           ROXR.W  #4,D0          FORM UPPER NIBBLE
00A01202  6102                    2385           BSR.S   PUTHEX         PUT ASCII INTO PRINT BUFFER
00A01204  3002                    2386           MOVE.W  D2,D0          GET BACK FROM TEMP
00A01206                          2387  * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
00A01206                          2388  *
00A01206  0200 000F               2389  PUTHEX   ANDI.B  #$0F,D0        SAVE LOWER NIBBLE
00A0120A  0000 0030               2390           ORI.B   #$30,D0        CONVERT TO ASCII
00A0120E  0C00 0039               2391           CMPI.B  #$39,D0        SEE IF IT IS>9
00A01212  6F02                    2392           BLE.S   SAVHEX
00A01214  5E40                    2393           ADD     #7,D0          ADD TO MAKE 10=>A
00A01216  1CC0                    2394  SAVHEX   MOVE.B  D0,(A6)+       PUT IT IN PRINT BUFFER
00A01218  4E75                    2395           RTS
00A0121A                          2396  
00A0121A                          2397  * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
00A0121A                          2398  *        ENTER     D0 = VALUE
00A0121A                          2399  *                  A6 = STORE POINTER
00A0121A                          2400  *
00A0121A  48E7 4780               2401  FRELADDR MOVEM.L D1/D5-D7/A0,-(A7)
00A0121E  2079 000000C0           2402           MOVEA.L RAMBASE.L,A0   ;LEA     OFFSET,A0
00A01224  7EFF                    2403           MOVEQ   #-1,D7         D7 = DIFF. BEST FIT
00A01226  4286                    2404           CLR.L   D6             D6 = OFFSET POSITION
00A01228                          2405  
00A01228  2200                    2406  FREL10   MOVE.L  D0,D1
00A0122A  4A90                    2407           TST.L   (A0)
00A0122C  670C                    2408           BEQ.S   FREL15         ZERO OFFSET
00A0122E  9290                    2409           SUB.L   (A0),D1        D1 = DIFF.
00A01230  6B08                    2410           BMI.S   FREL15         NO FIT
00A01232                          2411  
00A01232  B287                    2412           CMP.L   D7,D1
00A01234  6404                    2413           BCC.S   FREL15         OLD FIT BETTER
00A01236                          2414  
00A01236  2E01                    2415           MOVE.L  D1,D7          D7 = NEW BEST FIT
00A01238  2A06                    2416           MOVE.L  D6,D5          D5 = POSITION
00A0123A                          2417  
00A0123A  5888                    2418  FREL15   ADDQ.L  #4,A0
00A0123C  5286                    2419           ADDQ.L  #1,D6
00A0123E  0C46 0008               2420           CMPI.W  #8,D6
00A01242  66E4                    2421           BNE     FREL10         MORE OFFSETS TO CHECK
00A01244                          2422  
00A01244  4A87                    2423           TST.L   D7
00A01246  6B1E                    2424           BMI.S   FREL25         NO FIT
00A01248  4A46                    2425           TST     D6
00A0124A  6608                    2426           BNE.S   FREL20
00A0124C  4AB9 000000C0           2427           TST.L   RAMBASE.L      ;TST.L    OFFSET
00A01252  6712                    2428           BEQ.S   FREL25         R0 = 000000; NO FIT
00A01254                          2429  
00A01254  2007                    2430  FREL20   MOVE.L  D7,D0
00A01256  6198                    2431           BSR     PNT6HX         FORMAT OFFSET
00A01258  1CFC 002B               2432           MOVE.B  #'+',(A6)+     +
00A0125C  1CFC 0052               2433           MOVE.B  #'R',(A6)+     R
00A01260  0605 0030               2434           ADDI.B  #'0',D5        MAKE ASCII
00A01264  600A                    2435           BRA.S   FREL30
00A01266                          2436  
00A01266  6188                    2437  FREL25   BSR     PNT6HX         FORMAT ADDRESS AS IS
00A01268  1A3C 0020               2438           MOVE.B  #BLANK,D5
00A0126C  1CC5                    2439           MOVE.B  D5,(A6)+       THREE SPACES FOR ALIGNMENT
00A0126E  1CC5                    2440           MOVE.B  D5,(A6)+
00A01270  1CC5                    2441  FREL30   MOVE.B  D5,(A6)+
00A01272                          2442  
00A01272  4CDF 01E2               2443           MOVEM.L (A7)+,D1/D5-D7/A0
00A01276  4E75                    2444           RTS
00A01278                          2445  
00A01278                          2446  ;******************************************************************************
00A01278                          2447  
00A01278                          2448  
00A01278                          2449  ; DISPLAY USER REGISTERS D0-D7 AND A0-A7
00A01278                          2450  ;
00A01278                          2451  
00A01278  47F9 00A01925           2452  DISPLAY_REG  LEA.L REGISTER_DISP.L,A3
00A0127E  6100 FAEA               2453               BSR PSTR
00A01282                          2454  
00A01282  2C79 000000C0           2455  DISPLAY_REG1 MOVEA.L RAMBASE.L,A6
00A01288  6100 FAEE               2456               BSR NEW_LINE
00A0128C  6100 FAEA               2457               BSR NEW_LINE
00A01290  267C 00A01A94           2458               MOVEA.L #PC_REG,A3
00A01296  6100 FAD2               2459               BSR PSTR
00A0129A  202E 00F0               2460               MOVE.L USER_PC(A6),D0
00A0129E  6100 FC88               2461               BSR OUT6X
00A012A2                          2462  
00A012A2  6100 FAE6               2463               BSR SPACE
00A012A6                          2464  
00A012A6  267C 00A01A98           2465               MOVEA.L #SR_REG,A3
00A012AC  6100 FABC               2466               BSR PSTR
00A012B0  302E 00EA               2467               MOVE.W USER_SR(A6),D0
00A012B4  6100 FC6A               2468               BSR OUT4X
00A012B8                          2469  
00A012B8                          2470  ; NOW PRINT FLAG LOGIC IN BINARY
00A012B8  1800                    2471               MOVE.B D0,D4       ; SAVE TO D4
00A012BA                          2472  
00A012BA  E70C                    2473               LSL.B #3,D4        ; BIT POSITION BEFORE SHIFTING OUT
00A012BC                          2474  
00A012BC  6100 FACC               2475               BSR SPACE
00A012C0  267C 00A01AA8           2476               MOVEA.L #X_FLAG,A3
00A012C6  6100 FAA2               2477               BSR PSTR
00A012CA  E30C                    2478               LSL.B #1,D4
00A012CC  6100 00DA               2479               BSR PRINT_BIT
00A012D0                          2480  
00A012D0  6100 FAB8               2481               BSR SPACE
00A012D4  267C 00A01AA5           2482               MOVEA.L #N_FLAG,A3
00A012DA  6100 FA8E               2483               BSR PSTR
00A012DE  E30C                    2484               LSL.B #1,D4
00A012E0  6100 00C6               2485               BSR PRINT_BIT
00A012E4                          2486  
00A012E4  6100 FAA4               2487               BSR SPACE
00A012E8  267C 00A01AA2           2488               MOVEA.L #Z_FLAG,A3
00A012EE  6100 FA7A               2489               BSR PSTR
00A012F2  E30C                    2490               LSL.B #1,D4
00A012F4  6100 00B2               2491               BSR PRINT_BIT
00A012F8                          2492  
00A012F8  6100 FA90               2493               BSR SPACE
00A012FC  267C 00A01A9F           2494               MOVEA.L #V_FLAG,A3
00A01302  6100 FA66               2495               BSR PSTR
00A01306  E30C                    2496               LSL.B #1,D4
00A01308  6100 009E               2497               BSR PRINT_BIT
00A0130C                          2498  
00A0130C  6100 FA7C               2499               BSR SPACE
00A01310  267C 00A01A9C           2500               MOVEA.L #CARRY_FLAG,A3
00A01316  6100 FA52               2501               BSR PSTR
00A0131A  E30C                    2502               LSL.B #1,D4
00A0131C  6100 008A               2503               BSR PRINT_BIT
00A01320                          2504  
00A01320                          2505  
00A01320  6100 FA56               2506               BSR NEW_LINE
00A01324  143C 0000               2507               MOVE.B #0,D2
00A01328                          2508  
00A01328  2C79 000000C0           2509               MOVEA.L RAMBASE.L,A6
00A0132E                          2510  
00A0132E  47EE 00AA               2511               LEA.L USER_DATA(A6),A3
00A01332                          2512  
00A01332  103C 0044               2513  REG1         MOVE.B #'D',D0
00A01336  6100 F9FA               2514               BSR COUT
00A0133A  1002                    2515               MOVE.B D2,D0
00A0133C  6100 FBC0               2516               BSR OUT1X
00A01340  103C 003D               2517               MOVE.B #'=',D0
00A01344  6100 F9EC               2518               BSR COUT
00A01348                          2519  
00A01348  201B                    2520               MOVE.L (A3)+,D0
00A0134A  6100 FBE4               2521               BSR OUT8X
00A0134E  5202                    2522               ADDQ.B #1,D2
00A01350  0C02 0008               2523               CMPI.B #8,D2
00A01354  6710                    2524               BEQ.S REG4
00A01356  6100 FA32               2525               BSR SPACE
00A0135A                          2526  
00A0135A  0C02 0004               2527               CMPI.B #4,D2
00A0135E  66D2                    2528               BNE.S REG1
00A01360  6100 FA16               2529               BSR NEW_LINE
00A01364  60CC                    2530               BRA.S REG1
00A01366                          2531  
00A01366  6100 FA10               2532  REG4         BSR NEW_LINE
00A0136A  143C 0000               2533               MOVE.B #0,D2
00A0136E                          2534  
00A0136E  103C 0041               2535  REG3         MOVE.B #'A',D0
00A01372  6100 F9BE               2536               BSR COUT
00A01376  1002                    2537               MOVE.B D2,D0
00A01378  6100 FB84               2538               BSR OUT1X
00A0137C  103C 003D               2539               MOVE.B #'=',D0
00A01380  6100 F9B0               2540               BSR COUT
00A01384                          2541  
00A01384  201B                    2542               MOVE.L (A3)+,D0
00A01386  6100 FBA8               2543               BSR OUT8X
00A0138A  5202                    2544               ADDQ.B #1,D2
00A0138C  0C02 0008               2545               CMPI.B #8,D2
00A01390  6710                    2546               BEQ.S REG2
00A01392  6100 F9F6               2547               BSR SPACE
00A01396                          2548  
00A01396  0C02 0004               2549               CMPI.B #4,D2
00A0139A  66D2                    2550               BNE.S REG3
00A0139C  6100 F9DA               2551               BSR NEW_LINE
00A013A0  60CC                    2552               BRA.S REG3
00A013A2                          2553  
00A013A2  6100 F9D4               2554  REG2         BSR NEW_LINE
00A013A6  4E75                    2555               RTS
00A013A8                          2556  
00A013A8                          2557  
00A013A8                          2558  
00A013A8                          2559  
00A013A8                          2560  ; SEND '0' OR '1' TO SCREEN
00A013A8                          2561  
00A013A8  650A                    2562  PRINT_BIT   BCS.S WRITE_1
00A013AA  103C 0030               2563              MOVE.B #'0',D0
00A013AE  6100 F982               2564              BSR COUT
00A013B2  4E75                    2565              RTS
00A013B4                          2566  
00A013B4  103C 0031               2567  WRITE_1     MOVE.B #'1',D0
00A013B8  6100 F978               2568              BSR COUT
00A013BC  4E75                    2569              RTS
00A013BE                          2570  
00A013BE                          2571  ; JUMP TO USER PROGRAM
00A013BE                          2572  ; 
00A013BE                          2573  
00A013BE  47F9 00A01906           2574  JUMP       LEA.L JUMP_TO.L,A3
00A013C4  6100 F9A4               2575             BSR PSTR
00A013C8                          2576  
00A013C8  2C79 000000C0           2577             MOVEA.L RAMBASE.L,A6
00A013CE  202E 00F0               2578             MOVE.L USER_PC(A6),D0
00A013D2  6100 FB54               2579             BSR OUT6X
00A013D6  103C 003E               2580             MOVE.B #'>',D0
00A013DA                          2581  
00A013DA  6100 F956               2582             BSR COUT
00A013DE                          2583  
00A013DE  6100 F9F8               2584             BSR GET_HEX
00A013E2                          2585  
00A013E2  08AE 0000 0024          2586             BCLR.B #BIT_ESC,FLAG(A6) ; TEST BIT_ESC BIT
00A013E8  6614                    2587             BNE.S ABORT             ; IF BIT = 1 THEN EXIT
00A013EA                          2588  
00A013EA  08AE 0001 0024          2589             BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00A013F0  660E                    2590             BNE.S JUMP1         ; RUN USER PROGRAM
00A013F2                          2591  
00A013F2  4286                    2592             CLR.L D6
00A013F4  6100 FC40               2593             BSR GET_ADDRESS1
00A013F8                          2594  
00A013F8                          2595  ; GOT D6 FOR DESTINATION
00A013F8                          2596  
00A013F8  2D46 00F0               2597             MOVE.L D6,USER_PC(A6)  ; SAVE TO USER PC
00A013FC  6002                    2598             BRA.S JUMP1
00A013FE                          2599  
00A013FE  4E75                    2600  ABORT      RTS                 ; GET BACK MONITOR
00A01400                          2601  
00A01400  2C79 000000C0           2602  JUMP1      MOVEA.L RAMBASE.L,A6     ; POINTED TO START MONITOR RAM
00A01406                          2603  
00A01406  206E 00E6               2604             MOVEA.L USER_USP(A6),A0
00A0140A  4E60                    2605             MOVE.L  A0,USP           ; WRITE TO REAL USER STACK (A7)
00A0140C                          2606  
00A0140C  2F2E 00F0               2607             MOVE.L  USER_PC(A6),-(SP)     ; PUSH PC
00A01410                          2608  
00A01410  08AE 0005 00EA          2609             BCLR.B   #5,USER_SR(A6) ; SET USER MODE     
00A01416                          2610  
00A01416  3F2E 00EA               2611             MOVE.W  USER_SR(A6),-(SP)
00A0141A  4CEE 7FFF 00AA          2612             MOVEM.L USER_DATA(A6),D0-D7/A0-A6
00A01420  4E73                    2613             RTE                     ; JUMP TO USER PROGRAM
00A01422                          2614  
00A01422                          2615  
00A01422                          2616  ; TRACE JUMP
00A01422                          2617  ; SET TRACE BIT IN SAVED STATUS REGISTER
00A01422                          2618  
00A01422  47F9 00A01A04           2619  TRACE_JUMP LEA.L TRACE_MSG.L,A3
00A01428  6100 F940               2620             BSR PSTR
00A0142C  6100 F94A               2621             BSR NEW_LINE
00A01430                          2622  
00A01430  2C79 000000C0           2623             MOVEA.L RAMBASE.L,A6
00A01436  286E 00F0               2624             MOVEA.L USER_PC(A6),A4
00A0143A  4CD4 0007               2625             MOVEM.L (A4),D0-D2
00A0143E  2A79 000000C0           2626             MOVEA.L RAMBASE.L,A5
00A01444  DBFC 00000026           2627             ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00A0144A                          2628  
00A0144A  4EB9 00A007B8           2629             JSR  DCODE68K.L
00A01450                          2630  
00A01450  6100 F926               2631             BSR NEW_LINE
00A01454  6100 0130               2632             BSR PRINT_LINE
00A01458                          2633  
00A01458  2C79 000000C0           2634             MOVEA.L RAMBASE.L,A6
00A0145E                          2635  
00A0145E  08EE 0007 00EA          2636             BSET.B #TRACE_BIT,USER_SR(A6)  ; SET TRACE BIT
00A01464  609A                    2637             BRA JUMP1                    ; BORROW JUMP ROUTINE
00A01466                          2638  
00A01466                          2639  ; CLEAR MONITOR RAM
00A01466                          2640  
00A01466  2C79 000000C0           2641  CLEAR_MON_RAM MOVEA.L RAMBASE.L,A6
00A0146C  3E3C 0200               2642                MOVE.W  #512,D7
00A01470                          2643  
00A01470  3CFC 0000               2644  CLEAR1        MOVE.W #0000,(A6)+
00A01474  51CF FFFA               2645                DBRA D7,CLEAR1
00A01478  4E75                    2646                RTS
00A0147A                          2647  
00A0147A                          2648  
00A0147A                          2649  
00A0147A                          2650  ; MODIFY USER REGISTERS
00A0147A                          2651  
00A0147A  2C79 000000C0           2652  MODIFY_REG    MOVEA.L RAMBASE.L,A6
00A01480  6100 F8D4               2653                BSR CIN
00A01484  C03C 00DF               2654                AND.B #%11011111,D0
00A01488  0C00 0050               2655                CMPI.B #'P',D0
00A0148C  661A                    2656                BNE.S DATA_REG1
00A0148E                          2657  
00A0148E  103C 0043               2658                MOVE.B #'C',D0
00A01492  6100 F89E               2659                BSR COUT
00A01496  103C 003D               2660                MOVE.B #'=',D0
00A0149A  6100 F896               2661                BSR COUT
00A0149E  6100 FB90               2662                BSR GET_ADDRESS
00A014A2                          2663  
00A014A2  2D46 00F0               2664                MOVE.L D6,USER_PC(A6)
00A014A6  4E75                    2665                RTS
00A014A8                          2666  
00A014A8  0C00 0044               2667  DATA_REG1     CMPI.B #'D',D0
00A014AC  6622                    2668                BNE.S ADDRESS_REG2
00A014AE  6100 F8A6               2669                BSR CIN
00A014B2  0400 0030               2670                SUB.B #'0',D0
00A014B6                          2671  
00A014B6  4287                    2672                CLR.L D7
00A014B8  1E00                    2673                MOVE.B D0,D7
00A014BA                          2674  
00A014BA  103C 003D               2675                MOVE.B #'=',D0
00A014BE  6100 F872               2676                BSR COUT
00A014C2                          2677  
00A014C2  6100 FB4A               2678                BSR GET_32BIT
00A014C6                          2679  
00A014C6  E50F                    2680                LSL.B #2,D7        ; D7*4
00A014C8  DCC7                    2681                ADDA.W D7,A6
00A014CA  2D46 00AA               2682                MOVE.L D6,USER_DATA(A6)  ; SAVE TO USER DATA REGISTERS
00A014CE                          2683  
00A014CE  4E75                    2684                RTS
00A014D0                          2685                
00A014D0  0C00 0041               2686  ADDRESS_REG2  CMPI.B #'A',D0
00A014D4  6620                    2687                BNE.S WHAT3
00A014D6  6100 F87E               2688                BSR CIN
00A014DA  0400 0030               2689                SUB.B #'0',D0
00A014DE                          2690  
00A014DE  4287                    2691                CLR.L D7
00A014E0  1E00                    2692                MOVE.B D0,D7
00A014E2                          2693  
00A014E2  103C 003D               2694                MOVE.B #'=',D0
00A014E6  6100 F84A               2695                BSR COUT
00A014EA                          2696  
00A014EA  6100 FB22               2697                BSR GET_32BIT
00A014EE                          2698  
00A014EE  E50F                    2699                LSL.B #2,D7        ; D7*4
00A014F0  DCC7                    2700                ADDA.W D7,A6
00A014F2  2D46 00CA               2701                MOVE.L D6,USER_ADDR(A6)  ; SAVE TO USER ADDRESS REGISTERS
00A014F6                          2702  
00A014F6  4E75                    2703  WHAT3         RTS
00A014F8                          2704  
00A014F8                          2705  ;=======================================================================
00A014F8                          2706  ; TRAP #N SERVICES
00A014F8                          2707  ;
00A014F8                          2708  
00A014F8  2F08                    2709  SERVICE_TRAP0   MOVE.L A0,-(SP)      ; SAVE A0 BEFOREHAND
00A014FA  2079 000000C0           2710                  MOVEA.L RAMBASE.L,A0  ; USE A0 AS THE POINTER
00A01500  41E8 00AA               2711                  LEA.L USER_DATA(A0),A0
00A01504  48D0 7FFF               2712                  MOVEM.L D0-D7/A0-A6,(A0)
00A01508  215F 0020               2713                  MOVE.L (SP)+,32(A0)  ; RESTORE A0
00A0150C                          2714  
00A0150C  2079 000000C0           2715                  MOVEA.L RAMBASE.L,A0
00A01512  315F 00EA               2716                  MOVE.W (SP)+,USER_SR(A0)
00A01516  08A8 0007 00EA          2717                  BCLR.B #TRACE_BIT,USER_SR(A0) ; TURN TRACE BIT OFF
00A0151C  215F 00F0               2718                  MOVE.L (SP)+,USER_PC(A0)
00A01520                          2719  
00A01520  4E6A                    2720                  MOVE.L USP,A2
00A01522  214A 00E6               2721                  MOVE.L A2,USER_USP(A0)
00A01526                          2722  
00A01526  6100 FD5A               2723                  BSR DISPLAY_REG1
00A0152A                          2724  
00A0152A  2E7C 0000E000           2725                  MOVE.L #SUPER_STACK,SP  ; REINIT SYSTEM STACK
00A01530  46FC 2000               2726                  MOVE.W #INT_ON,SR   ; REENTER SUPERVISOR MODE
00A01534                          2727  
00A01534  4EF9 00A00BFE           2728                  JMP LOOP.L        ; GET BACK MONITOR
00A0153A                          2729  
00A0153A                          2730  
00A0153A                          2731  ; DISASSEMBLE THE MACHNIE CODE INTO MNEMONIC
00A0153A                          2732  
00A0153A  47F9 00A01954           2733  DISASSEMBLE     LEA.L DIS.L,A3
00A01540  6100 F828               2734                  BSR PSTR
00A01544                          2735  
00A01544                          2736             ;   LEA.L $102000.L,A4
00A01544                          2737  
00A01544  2C79 000000C0           2738                 MOVEA.L RAMBASE.L,A6
00A0154A                          2739  
00A0154A  3E3C 0013               2740                 MOVE.W #19,D7       ; 20 LINES DISASSEMBLE
00A0154E                          2741  
00A0154E  286E 00A6               2742                 MOVEA.L POINTER_NOW(A6),A4
00A01552                          2743  
00A01552  4CD4 0007               2744  DIS1           MOVEM.L (A4),D0-D2
00A01556  2A79 000000C0           2745                 MOVEA.L RAMBASE.L,A5
00A0155C  DBFC 00000026           2746                 ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00A01562                          2747  
00A01562  48E7 0102               2748                 MOVEM.L A6/D7,-(SP)
00A01566                          2749  
00A01566  4EB9 00A007B8           2750                 JSR  DCODE68K.L
00A0156C                          2751  
00A0156C  6100 F80A               2752                 BSR NEW_LINE
00A01570  6100 0014               2753                 BSR PRINT_LINE
00A01574                          2754  
00A01574  4CDF 4080               2755                 MOVEM.L (SP)+,D7/A6
00A01578                          2756  
00A01578  51CF FFD8               2757                 DBRA D7,DIS1
00A0157C                          2758  
00A0157C  2D4C 00A6               2759                 MOVE.L A4,POINTER_NOW(A6) ; NEXT BLOCK
00A01580  6100 F7F6               2760                 BSR NEW_LINE
00A01584  4E75                    2761                 RTS
00A01586                          2762  
00A01586  101D                    2763  PRINT_LINE     MOVE.B (A5)+,D0
00A01588  6100 F7A8               2764                 BSR COUT
00A0158C  BDCD                    2765                 CMPA.L A5,A6
00A0158E  66F6                    2766                 BNE.S PRINT_LINE
00A01590  4E75                    2767                 RTS
00A01592                          2768  
00A01592                          2769  
00A01592                          2770  ; UPLOAD BINARY IMAGE FROM MEMORY
00A01592                          2771  ; SEND IT TO TERMINAL AS HEX CODE IN LONG WORD FORMAT
00A01592                          2772  ; USE FOR DISASSEMBLER HEX CODE PREPARATION
00A01592                          2773  
00A01592  47F9 00A0197A           2774  UPLOAD        LEA.L UPLOAD1.L,A3
00A01598  6100 F7D0               2775                BSR PSTR
00A0159C  6100 F7B8               2776                BSR CIN
00A015A0                          2777  
00A015A0  4BF9 00100400           2778                LEA.L $100400.L,A5    ; START
00A015A6  4DF9 00102000           2779                LEA.L $102000.L,A6    ; STOP
00A015AC                          2780  
00A015AC  6100 F7CA               2781  UPLOAD3       BSR NEW_LINE
00A015B0  47F9 00A019A4           2782                LEA.L STRING1.L,A3
00A015B6  6100 F7B2               2783                BSR PSTR
00A015BA                          2784  
00A015BA  3E3C 0007               2785                MOVE.W #7,D7
00A015BE                          2786  
00A015BE  103C 0024               2787  UPLOAD2       MOVE.B #'$',D0
00A015C2  6100 F76E               2788                BSR COUT
00A015C6  201D                    2789                MOVE.L (A5)+,D0
00A015C8  6100 F966               2790                BSR OUT8X
00A015CC  103C 002C               2791                MOVE.B #',',D0
00A015D0  6100 F760               2792                BSR COUT
00A015D4  51CF FFE8               2793                DBRA D7,UPLOAD2
00A015D8                          2794  
00A015D8  BDCD                    2795                CMPA.L A5,A6
00A015DA  6ED0                    2796                BGT  UPLOAD3
00A015DC                          2797  
00A015DC  4E75                    2798                RTS
00A015DE                          2799  
00A015DE                          2800  ; ABOUT zBUG V1.0
00A015DE                          2801  
00A015DE  47F9 00A019AB           2802  ABOUT         LEA.L ABOUTZBUG.L,A3
00A015E4  6100 F784               2803                BSR PSTR
00A015E8  4E75                    2804                RTS
00A015EA                          2805  
00A015EA                          2806  ; VIEW USER STACK
00A015EA                          2807  
00A015EA  47F9 00A01A15           2808  VIEW_USP      LEA.L VIEW.L,A3
00A015F0  6100 F778               2809                BSR PSTR
00A015F4                          2810  
00A015F4  6100 F782               2811                BSR NEW_LINE
00A015F8                          2812  
00A015F8  227C 0000FFF4           2813                MOVEA.L #SUPER_STACK+USER_STACK,A1 ; TOP OF USER STACK
00A015FE                          2814  
00A015FE  41E9 FFE0               2815                LEA.L -32(A1),A0    ; EACH COMPOSED OF TWO BYTES
00A01602                          2816  
00A01602  3E3C 0010               2817                MOVE.W #16,D7
00A01606  2C79 000000C0           2818                MOVEA.L RAMBASE.L,A6
00A0160C                          2819  
00A0160C                          2820  
00A0160C  2008                    2821  VIEW1         MOVE.L A0,D0
00A0160E                          2822  
00A0160E  2F00                    2823                MOVE.L D0,-(SP)
00A01610                          2824  
00A01610  B1EE 00E6               2825                CMPA.L USER_USP(A6),A0
00A01614  660C                    2826                BNE.S NOT_TOS
00A01616                          2827  
00A01616  47F9 00A01A84           2828                LEA.L TOP_OF_STACK.L,A3
00A0161C  6100 F74C               2829                BSR PSTR
00A01620  600A                    2830                BRA.S SKIP_PRINT_BLANK
00A01622                          2831  
00A01622  47F9 00A01A8C           2832  NOT_TOS       LEA.L BLANK_BLOCK.L,A3
00A01628  6100 F740               2833                BSR PSTR
00A0162C                          2834  
00A0162C                          2835  SKIP_PRINT_BLANK
00A0162C                          2836  
00A0162C  201F                    2837                MOVE.L (SP)+,D0
00A0162E  6100 F8F8               2838                BSR OUT6X
00A01632  6100 F756               2839                BSR SPACE
00A01636                          2840  
00A01636  103C 005B               2841                MOVE.B #'[',D0
00A0163A  6100 F6F6               2842                BSR COUT
00A0163E                          2843  
00A0163E  3018                    2844                MOVE.W (A0)+,D0
00A01640  6100 F8DE               2845                BSR OUT4X
00A01644                          2846  
00A01644  103C 005D               2847                MOVE.B #']',D0
00A01648  6100 F6E8               2848                BSR COUT
00A0164C                          2849  
00A0164C  6100 F72A               2850                BSR NEW_LINE
00A01650  51CF FFBA               2851                DBRA D7,VIEW1
00A01654                          2852  
00A01654  4E75                    2853                RTS
00A01656                          2854  
00A01656                          2855  
00A01656                          2856  ; LOAD SP WITH [RAM] AND PC [RAM+4]
00A01656                          2857  
00A01656  2E79 00000000           2858  BOOT_RAM      MOVEA.L RAM.L,SP
00A0165C  2079 00000004           2859                MOVEA.L 4+RAM.L,A0
00A01662  4ED0                    2860                JMP     (A0)
00A01664                          2861  
00A01664                          2862  ; SERVICE BUS ERROR
00A01664  2679 00A01A40           2863  SERVICE_BUSERROR MOVEA.L BUSERROR_MSG.L,A3
00A0166A  6000 001C               2864                  BRA SERVICE_MSG
00A0166E                          2865  
00A0166E                          2866  ; SERVICE ADDRESS ERROR
00A0166E  2679 00A01A4D           2867  SERVICE_ADDRESSERR MOVEA.L ADDRESSERR_MSG.L,A3
00A01674  6000 0012               2868                  BRA SERVICE_MSG
00A01678                          2869  
00A01678                          2870  ; SERVICE ILLEGAL INTSRUCTION
00A01678  2679 00A01A5E           2871  SERVICE_ILLEGAL MOVEA.L ILLEGAL_MSG.L,A3
00A0167E  6000 0008               2872                  BRA SERVICE_MSG
00A01682                          2873  
00A01682                          2874  ; SERVICE ZERO DIVIDE
00A01682  2679 00A01A75           2875  SERVICE_ZERODIV MOVEA.L ZERODIV_MSG.L,A3
00A01688  6100 F6E0               2876  SERVICE_MSG     BSR PSTR
00A0168C  4E40                    2877                  TRAP #0
00A0168E                          2878  
00A0168E                          2879  ; vector table initrize
00A0168E  41FA 0026               2880  VECINIT   LEA   VECTABLE(pc),a0
00A01692  327C 0008               2881            MOVEA.W   #$0008,a1
00A01696  700A                    2882            MOVEQ     #10,D0
00A01698  22D8                    2883  VECINIT1  MOVE.L    (a0)+,(a1)+
00A0169A  5300                    2884            SUBQ.B    #1,D0
00A0169C  66FA                    2885            BNE       VECINIT1
00A0169E  327C 0060               2886            MOVEA.W   #$60,A1
00A016A2  7018                    2887            MOVEQ     #24,D0
00A016A4  22D8                    2888  VECINIT2  MOVE.L    (a0)+,(a1)+
00A016A6  5300                    2889            SUBQ.B    #1,D0
00A016A8  66FA                    2890            BNE       VECINIT2
00A016AA  327C 00C0               2891            MOVEA.W   #$C0,A1
00A016AE  22BC 0000E000           2892            MOVE.L    #RAMBASE_INIT,(a1)
00A016B4  4E75                    2893            RTS
00A016B6                          2894  
00A016B6                          2895  ;----------------- M68000 EXCEPTION VECTOR TABLE -----------------------------
00A016B6= 00A01664                2896  VECTABLE  DC.L  SERVICE_BUSERROR     ; 2 Bus error
00A016BA= 00A0166E                2897            DC.L  SERVICE_ADDRESSERR   ; 3 Address error
00A016BE= 00A01678                2898            DC.L  SERVICE_ILLEGAL      ; 4 Illegal instruction
00A016C2= 00A01682                2899            DC.L  SERVICE_ZERODIV      ; 5 Zero divide
00A016C6= 00A014F8                2900            DC.L  SERVICE_TRAP0        ; 6 CHK instruction
00A016CA= 00A014F8                2901            DC.L  SERVICE_TRAP0        ; 7 TRAPV instruction
00A016CE= 00A014F8                2902            DC.L  SERVICE_TRAP0        ; 8 Privilege violation
00A016D2= 00A014F8                2903            DC.L  SERVICE_TRAP0        ; 9 Trace
00A016D6= 00A014F8                2904            DC.L  SERVICE_TRAP0    ; 10 Line 1010 emulator
00A016DA= 00A014F8                2905            DC.L  SERVICE_TRAP0    ; 11 Line 1111 emulator
00A016DE                          2906  
00A016DE= 00A014F8                2907            DC.L  SERVICE_TRAP0    ; 24 Spurious Interupt
00A016E2= 00A014F8                2908            DC.L  SERVICE_TRAP0    ; 25 LEVEL 1 Interupt autovector
00A016E6= 00A014F8                2909            DC.L  SERVICE_TRAP0    ; 26 LEVEL 2 Interupt autovector
00A016EA= 00A014F8                2910            DC.L  SERVICE_TRAP0    ; 27 LEVEL 3 Interupt autovector
00A016EE= 00A014F8                2911            DC.L  SERVICE_TRAP0    ; 28 LEVEL 4 Interupt autovector
00A016F2= 00A014F8                2912            DC.L  SERVICE_TRAP0    ; 29 LEVEL 5 Interupt autovector
00A016F6= 00A014F8                2913            DC.L  SERVICE_TRAP0    ; 30 LEVEL 6 Interupt autovector
00A016FA= 00A014F8                2914            DC.L  SERVICE_TRAP0    ; 31 LEVEL 7 Interupt autovector
00A016FE= 00A014F8                2915            DC.L  SERVICE_TRAP0    ; 32 TRAP #0
00A01702= 00A014F8                2916            DC.L  SERVICE_TRAP0    ; 33 TRAP #1
00A01706= 00A014F8                2917            DC.L  SERVICE_TRAP0    ; 34 TRAP #2
00A0170A= 00A014F8                2918            DC.L  SERVICE_TRAP0    ; 35 TRAP #3
00A0170E= 00A014F8                2919            DC.L  SERVICE_TRAP0    ; 36 TRAP #4
00A01712= 00A014F8                2920            DC.L  SERVICE_TRAP0    ; 37 TRAP #5
00A01716= 00A014F8                2921            DC.L  SERVICE_TRAP0    ; 38 TRAP #6
00A0171A= 00A014F8                2922            DC.L  SERVICE_TRAP0    ; 39 TRAP #7
00A0171E= 00A014F8                2923            DC.L  SERVICE_TRAP0    ; 40 TRAP #8
00A01722= 00A014F8                2924            DC.L  SERVICE_TRAP0    ; 41 TRAP #9
00A01726= 00A014F8                2925            DC.L  SERVICE_TRAP0    ; 42 TRAP #10
00A0172A= 00A014F8                2926            DC.L  SERVICE_TRAP0    ; 43 TRAP #11
00A0172E= 00A014F8                2927            DC.L  SERVICE_TRAP0    ; 44 TRAP #12
00A01732= 00A014F8                2928            DC.L  SERVICE_TRAP0    ; 45 TRAP #13
00A01736= 00A014F8                2929            DC.L  SERVICE_TRAP0    ; 46 TRAP #14
00A0173A= 00A014F8                2930            DC.L  SERVICE_TRAP0    ; 47 TRAP #15
00A0173E                          2931  ;----------------------- STRING CONSTANT -------------------------------------
00A0173E                          2932  
00A0173E= 0D 0A 7A 42 75 67 ...   2933  TITLE  DC.B 13,10,'zBug V1.0 for MIC68K',13,10,0
00A01757= 0D 0A 7A 42 75 67 ...   2934  TITLE1 DC.B 13,10,'zBug V1.0 for MIC68K (press ? for help)',13,10,0
00A01783                          2935  
00A01783= 3E 00                   2936  PROMPT DC.B '>',0
00A01785                          2937  
00A01785= 6C 65 61 72 20 6D ...   2938  CLEAR  DC.B 'lear memory with 0x0000',0
00A0179D= 69 6C 6C 20 6D 65 ...   2939  FILL   DC.B 'ill memory with 0xFFFF',0 
00A017B4= 0D 0A 0A 73 74 61 ...   2940  START  DC.B 13,10,10,'start address=',0
00A017C6= 0D 0A 73 74 6F 70 ...   2941  STOP   DC.B 13,10,'stop  address=',0
00A017D7= 0D 0A 64 6F 6E 65 ...   2942  DONE   DC.B 13,10,'done...',0
00A017E1                          2943  
00A017E1= 64 69 74 20 6D 65 ...   2944  EDIT1  DC.B 'dit memory (quit: SPACE BAR, next address: ENTER)',0
00A01813= 0D 0A 0A 41 64 64 ...   2945  EDIT   DC.B 13,10,10,'Address=',0
00A0181F= 20 20 72 6F 6D 00       2946  ROM    DC.B '  rom',0
00A01825                          2947  
00A01825= 65 77 20 32 34 2D ...   2948  NEW    DC.B 'ew 24-bit pointer',0
00A01837                          2949  
00A01837= 75 69 63 6B 20 68 ...   2950  QUICK  DC.B 'uick home, get back to start of RAM!',13,10,0
00A0185E= 65 78 20 64 75 6D ...   2951  HEX    DC.B 'ex dump memory',13,10,10
00A0186F= 41 44 44 52 45 53 ...   2952         DC.B 'ADDRESS  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
00A018A7                          2953  
00A018A7= 6F 61 64 20 4D 6F ...   2954  LOAD   DC.B 'oad Motorola s-record (accept s2 and s8) quit: ESC',13,10,0
00A018DC                          2955  
00A018DC= 20 62 79 74 65 73 ...   2956  NUMBER DC.B ' bytes loaded, ',0
00A018EC= 20 72 65 63 6F 72 ...   2957  ERROR  DC.B ' records checksum error',13,10,0
00A01906                          2958  
00A01906= 75 6D 70 20 74 6F ...   2959  JUMP_TO DC.B 'ump to user program ',0 
00A0191B                          2960  
00A0191B= 20 54 52 41 50 20 ...   2961  TRAP_0 DC.B ' TRAP 0 !',0
00A01925                          2962  
00A01925= 65 67 69 73 74 65 ...   2963  REGISTER_DISP DC.B 'egister(user) display (A7= user stack pointer)',0
00A01954                          2964  
00A01954= 69 73 61 73 73 65 ...   2965  DIS    DC.B 'isassemble machine code to mnemonic',13,10,0
00A0197A                          2966  
00A0197A= 70 6C 6F 61 64 20 ...   2967  UPLOAD1 DC.B 'pload binary image, hit any key to begin ',0
00A019A4= 20 20 44 46 4C 20 00    2968  STRING1 DC.B '  DFL ',0
00A019AB                          2969  
00A019AB= 62 6F 75 74 20 7A ...   2970  ABOUTZBUG DC.B 'bout zBuG V1.0',13,10,10
00A019BC= 7A 42 75 67 20 56 ...   2971            DC.B 'zBug V1.0 Copyright (C) 2002 W.SIRICHOTE',13,10,10
00A019E7= 4D 49 43 36 38 4B ...   2972            DC.B 'MIC68K Version by @kanpapa',13,10,0
00A01A04                          2973  
00A01A04= 72 61 63 65 20 69 ...   2974  TRACE_MSG DC.B 'race instruction',0
00A01A15                          2975  
00A01A15= 74 61 63 6B 20 28 ...   2976  VIEW      DC.B 'tack (user)s content, shows 16-WORD deep',13,10,0
00A01A40                          2977  
00A01A40= 62 75 73 20 65 72 ...   2978  BUSERROR_MSG DC.B 'bus error...',0
00A01A4D= 61 64 64 72 65 73 ...   2979  ADDRESSERR_MSG DC.B 'address error...',0
00A01A5E= 69 6C 6C 65 67 61 ...   2980  ILLEGAL_MSG DC.B 'illegal instruction...',0
00A01A75= 7A 65 72 6F 20 64 ...   2981  ZERODIV_MSG DC.B 'zero divide...',0
00A01A84                          2982  
00A01A84= 54 4F 53 2D 2D 2D ...   2983  TOP_OF_STACK DC.B 'TOS--->',0
00A01A8C= 20 20 20 20 20 20 ...   2984  BLANK_BLOCK  DC.B '       ',0
00A01A94                          2985  
00A01A94= 50 43 3D 00             2986  PC_REG DC.B 'PC=',0
00A01A98= 53 52 3D 00             2987  SR_REG DC.B 'SR=',0
00A01A9C                          2988  
00A01A9C= 43 3D 00                2989  CARRY_FLAG DC.B 'C=',0
00A01A9F= 56 3D 00                2990  V_FLAG     DC.B 'V=',0
00A01AA2= 5A 3D 00                2991  Z_FLAG     DC.B 'Z=',0
00A01AA5= 4E 3D 00                2992  N_FLAG     DC.B 'N=',0
00A01AA8= 58 3D 00                2993  X_FLAG     DC.B 'X=',0
00A01AAB                          2994  
00A01AAB                          2995  
00A01AAB= 20 6D 6F 6E 69 74 ...   2996  HELP_LIST DC.B ' monitor commands',13,10,10
00A01ABF                          2997  
00A01ABF= 41 20 20 20 41 62 ...   2998         DC.B 'A   About zBug V1.0',13,10
00A01AD4= 42 20 20 20 42 6F ...   2999         DC.B 'B   Boot from RAM [000000] -> SP [000004] ->PC',13,10
00A01B04= 43 20 20 20 43 6C ...   3000         DC.B 'C   Clear memory with 0x0000',13,10
00A01B22= 44 20 20 20 44 69 ...   3001         DC.B 'D   Disassemble machine code to mnemonic',13,10
00A01B4C= 45 20 20 20 45 64 ...   3002         DC.B 'E   Edit memory',13,10
00A01B5D= 46 20 20 20 46 69 ...   3003         DC.B 'F   Fill memory with 0xFFFF',13,10
00A01B7A= 48 20 20 20 48 65 ...   3004         DC.B 'H   Hex dump memory',13,10
00A01B8F= 4A 20 20 20 4A 75 ...   3005         DC.B 'J   Jump to address',13,10
00A01BA4= 4C 20 20 20 4C 6F ...   3006         DC.B 'L   Load Motorola s-record',13,10
00A01BC0= 4E 20 20 20 4E 65 ...   3007         DC.B 'N   New 24-bit pointer',13,10
00A01BD8= 52 20 20 20 52 65 ...   3008         DC.B 'R   Register(user) display',13,10
00A01BF4= 53 20 20 20 53 74 ...   3009         DC.B 'S   Stack(user)s content',13,10
00A01C0E= 54 20 20 20 54 72 ...   3010         DC.B 'T   Trace instruction',13,10
00A01C25= 2E 20 20 20 4D 6F ...   3011         DC.B '.   Modify user registers, exp .PC .D0 .A0',13,10
00A01C51= 3F 20 20 20 4D 6F ...   3012         DC.B '?   Monitor commands list',13,10,0
00A01C6D                          3013  
00A01C6D                          3014  
00A01C6D                          3015  ; MONITOR'S RAM AREA
00A01C6D                          3016  ; MUST BE EVEN ADDRESS FOE RAMBASE
00A01C6D                          3017  ; THE A6 WAS LOADED WITH RAMBASE AS THE BASE MEMORY POINTER
00A01C6D                          3018  ; THE FOLLOWING VARIABLE CAN BE ACCEESED BY USING INDIRECT WITH DISPLACMENT
00A01C6D                          3019  
00A01C6D                          3020  ;RAMBASE     DC.L   $130000     ; RAM BASE ADDRESS
00A01C6D                          3021  
00A01C6D                          3022  ; DCODE68K
00A01C6D  =FFFFFFF0               3023  DDATA    EQU     $FFFFFFF0       ; DS.L 3
00A01C6D  =FFFFFFFC               3024  HISPC    EQU     $FFFFFFFC       ; DS.L 1
00A01C6D                          3025  
00A01C6D                          3026  ; OFFSET(DISPLACEMENT) DEFINITION
00A01C6D                          3027  
00A01C6D  =00000000               3028  OFFSET      EQU  0               ; FOR DISASSEMBLER USAGE
00A01C6D  =00000020               3029  DEBUG       EQU  OFFSET+32
00A01C6D  =00000024               3030  FLAG        EQU  DEBUG+4         ; 16-BIT MONITOR FLAG
00A01C6D  =00000026               3031  BUFFER      EQU  FLAG+2
00A01C6D  =000000A6               3032  POINTER_NOW EQU  BUFFER+128
00A01C6D  =000000AA               3033  USER_DATA   EQU  POINTER_NOW+4   ; USER D0-D7 AND A0-A7
00A01C6D  =000000CA               3034  USER_ADDR   EQU  USER_DATA+32    ; USER ADDRESS REGISTERS, A0-A7
00A01C6D  =000000E6               3035  USER_USP    EQU  USER_ADDR+28    ; A7 = USP
00A01C6D  =000000EA               3036  USER_SR     EQU  USER_USP+4      ; 
00A01C6D  =000000EC               3037  USER_SS     EQU  USER_SR+2
00A01C6D  =000000F0               3038  USER_PC     EQU  USER_SS+4
00A01C6D                          3039  
00A01C6D  =000000F4               3040  STACK_AREA  EQU  USER_PC+4           ; 32kB USER STACK -> 2kB
00A01C6D                          3041  ;USER_STACK  EQU  STACK_AREA+$7000    ; TOP OF STACK
00A01C6D  =00001FF4               3042  USER_STACK  EQU  STACK_AREA+$1F00    ; TOP OF STACK
00A01C6D                          3043  
00A01C6D                          3044  
00A01C6D                          3045  
00A01C6D                          3046         END  MAIN

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABORT               A013FE
ABOUT               A015DE
ABOUTZBUG           A019AB
ACIAC               F00009
ACIAD               F0000B
ADDRESSERR_MSG      A01A4D
ADDRESS_ERROR       C
ADDRESS_REG2        A014D0
BIT_ESC             0
BLANK               20
BLANK_BLOCK         A01A8C
BOOT_RAM            A01656
BRTBL               A00460
BS                  8
BUFFER              26
BUFSIZE             50
BUSERROR_MSG        A01A40
BUS_ERROR           8
C68                 3D
CARRY_FLAG          A01A9C
CHECKSUM_ERROR      A00EEA
CHECK_ESC           A00E36
CHECK_START         A00E82
CIN                 A00D56
CINS                A00D44
CLEAR               A01785
CLEAR1              A01470
CLEAR_MEMORY        A01086
CLEAR_MEMORY1       A010AC
CLEAR_MON_RAM       A01466
COMMON              A00856
COMMON35            A00864
COMMON4             A00854
COUT                A00D32
CR                  D
CS11                A00288
CS12                A001F2
CS13                A00170
CS14                A00100
CS15                A000C0
CS16                A00052
CS17                A0042C
CS18                A003C6
CS19                A004D8
CS20                A00328
DATA_REG1           A014A8
DCODE68K            A007B8
DDATA               FFFFFFF0
DEBUG               20
DEC311              A007CC
DEC404              A007EC
DEC411              A007FC
DEC425              A0080C
DEC510              A0081A
DEC515              A0081E
DEC530              A00826
DEC535              A0082C
DEC537              A00838
DIS                 A01954
DIS1                A01552
DISASSEMBLE         A0153A
DISPLAY_REG         A01278
DISPLAY_REG1        A01282
DONE                A017D7
EA000               A00508
EA001               A00514
EA010               A00520
EA011               A00534
EA011RTS            A0054A
EA100               A0054C
EA101               A005EE
EA1105              A005CA
EA1107              A005CE
EA1109              A005E4
EA111               A00604
EA1112              A00622
EA1113              A0063E
EA1113A             A0064E
EA1114              A00670
EA1115              A006DA
EA11153             A00712
EA11155             A0071C
EAF25               A006B8
EAF27               A006BC
EAF35               A006D0
EDIT                A01813
EDIT1               A017E1
EDIT_MEMORY         A010C0
EDIT_MEMORY2        A010DE
EDIT_MEMORY3        A01148
EDIT_MEMORY4        A01144
EDIT_MEMORY5        A01136
EEA                 A00566
EEA10               A0017A
EOT                 4
ERROR               A018EC
ESC                 1B
FDATA               A
FE10                A00562
FE11                A0064A
FE12                A0080A
FERROR              A0087E
FERROR35            A00888
FERROR39            A00894
FILL                A0179D
FILL_MEMORY         A0104C
FILL_MEMORY1        A01072
FLAG                24
FOC                 1F
FOP                 27
FORM1               A000F8
FORM10              A001C0
FORM103             A001C6
FORM104             A001CA
FORM105             A001DC
FORM10E3            A001A2
FORM10E4            A001AA
FORM10E6            A001B6
FORM10EX            A00180
FORM11              A001F8
FORM112             A00218
FORM114             A00226
FORM11SL            A00204
FORM12              A00228
FORM125             A00242
FORM12A             A00264
FORM1A              A000FC
FORM3               A00104
FORM4               A00108
FORM5               A0011C
FORM6A              A00120
FORM6D              A00130
FORM7               A00158
FORM8               A00164
FORM815             A00168
FORM9               A00174
FORM91              A004F0
FORM93              A00504
FORM95              A00506
FORMREG5            A00144
FORMREGA            A00140
FORMREGD            A00150
FORMSIZE            A004DC
FREL10              A01228
FREL15              A0123A
FREL20              A01254
FREL25              A01266
FREL30              A01270
FRELADDR            A0121A
GET_32BIT           A0100E
GET_ADDRESS         A01030
GET_ADDRESS1        A01036
GET_HEX             A00DD8
GET_HEX1            A00DEA
GET_HEX2            A00DF8
GET_HEXS            A00E08
GET_TYPE            A00E3E
HELP                A0114E
HELP_LIST           A01AAB
HEX                 A0185E
HEX2DEC             A01180
HEX_DUMP            A00F3C
HEX_DUMP1           A00F6C
HEX_DUMP2           A00F58
HEX_DUMP3           A00F94
HEX_DUMP4           A00F8E
HEX_DUMP5           A00F9A
HEX_DUMP6           A00F86
HISPC               FFFFFFFC
HX2DC               A01190
HX2DC0              A01194
HX2DC1              A0119C
HX2DC2              A011B6
HX2DC22             A011B8
HX2DC3              A011C2
HX2DC4              A011CA
HX2DC5              A011D2
HX2DC57             A011DA
HX2DC6              A011DE
IBSR                A00380
ICC                 A0037C
ICC35               A00392
ICC55               A003A8
ICCCC               A00448
ICCCC9              A0045E
IDBCC               A00368
ILINK               A000E0
ILLEGAL_INSTRUCTION  10
ILLEGAL_MSG         A01A5E
IM7788              A0001C
IM7799              A00020
IMMED               A00068
IMMED45             A0008E
IMMED55             A000C2
IMMED65             A000C8
IMMED75             A000D8
IMOVE               A000DC
IMOVE19             A004A6
IMOVEA1             A00480
IMOVEMFR            A00008
IMOVEMTR            A00038
IMOVEP              A00300
IMOVEP11            A00310
IMOVEP35            A0032C
IMOVEP66            A0033A
IMOVEQ              A00290
IMVFSR              A002B0
IMVFUSP             A002C0
IMVT44              A002DE
IMVTCCR             A002F0
IMVTSR              A002D0
IMVTUSP             A002E4
INIT_ACIA           A00D18
INT_OFF             2700
INT_ON              2000
IQUICK              A0028C
IQUICK21            A004BE
IQUICK31            A004D4
IQUICKA             A004AC
ISCC                A0035C
ISETD               A003B8
ISETD12             A003BE
ISETS               A003C8
ISHIFT              A003E4
ISHIFT13            A003F0
ISHIFT23            A00414
ISHIFT33            A00420
ISHIFT44            A00424
ISHIFTM1            A0042E
ISTOP               A00054
JUMP                A013BE
JUMP1               A01400
JUMP_TO             A01906
KI                  A008A8
KIEND               A008AA
LF                  A
LOAD                A018A7
LOCVARSZ            10
LONG                0
LOOP                A00BFE
LOOP_BACK           A00EF2
MAIN                A00BB4
MODIFY_REG          A0147A
MOVEMR              A0073C
MOVEMR11            A0074C
MOVEMR33            A00754
MOVEMR44            A00766
MOVEMR77            A00780
MOVEMR79            A00792
MOVEMR88            A00794
MOVEMR94            A007AC
MOVEMS              A00728
MOVEMS2             A00738
MSG111              A0089E
N68                 A9
NEW                 A01825
NEW_LINE            A00D78
NEW_POINTER         A00FB0
NEXT1               A00C1E
NEXT10              A00CA2
NEXT11              A00CB0
NEXT12              A00CBE
NEXT13              A00CCC
NEXT14              A00CDA
NEXT15              A00CE8
NEXT16              A00CF6
NEXT17              A00D02
NEXT18              A00D0C
NEXT2               A00C2C
NEXT3               A00C3A
NEXT4               A00C48
NEXT5               A00C56
NEXT6               A00C64
NEXT7               A00C72
NEXT8               A00C82
NEXT9               A00C92
NOT_TOS             A01622
NO_CHANGE           A00C10
NO_ERROR            A00EE6
NUMBER              A018DC
N_FLAG              A01AA5
OFFSET              0
OPCTBL              A00AB4
OUT1X               A00EFE
OUT1X1              A00F10
OUT2X               A00F18
OUT4X               A00F20
OUT6X               A00F28
OUT8X               A00F30
PC_REG              A01A94
PNT2HX              A011FE
PNT4HX              A011F6
PNT6HX              A011F0
PNT8HX              A011E8
POINTER_NOW         A6
PRINT_BIT           A013A8
PRINT_D0            A00F38
PRINT_DEBUG         A00FE6
PRINT_DEC           A0115A
PRINT_LINE          A01586
PROMPT              A01783
PSTR                A00D6A
PSTR1               A00D76
PUTHEX              A01206
QUICK               A01837
QUICK_HOME          A00FF4
RAM                 0
RAMBASE             C0
RAMBASE_INIT        E000
RDRF                0
READ_DATA           A00EC0
READ_S_REC          A00E1C
READ_S_REC1         A00E2A
REG1                A01332
REG2                A013A2
REG3                A0136E
REG4                A01366
REGISTER_DISP       A01925
ROM                 A0181F
RS                  1E
SAVHEX              A01216
SCHR                A002A8
SCOMMON             A00358
SCROLL              A00D92
SCROLL1             A00D96
SEND_PROMPT         A00D9E
SEND_TITLE          A00DB8
SERVICE_ADDRESSERR  A0166E
SERVICE_BUSERROR    A01664
SERVICE_ILLEGAL     A01678
SERVICE_MSG         A01688
SERVICE_TRAP0       A014F8
SERVICE_ZERODIV     A01682
SKIP_PRINT_BLANK    A0162C
SP                  20
SPACE               A00D8A
SR_REG              A01A98
STACK_AREA          F4
START               A017B4
START_FOUND         A00E90
STOP                A017C6
STRING1             A019A4
SUPERVISOR_BIT      5
SUPER_STACK         E000
TBL                 A008AA
TBLE                A00AB4
TDRE                1
TEST_RAM            A0104A
TITLE               A0173E
TITLE1              A01757
TOP_OF_STACK        A01A84
TO_HEX              A00DC2
TRACE_BIT           7
TRACE_JUMP          A01422
TRACE_MSG           A01A04
TRAP0               80
TRAP1               84
TRAP10              A8
TRAP11              AC
TRAP12              B0
TRAP13              B4
TRAP14              B8
TRAP15              BC
TRAP2               88
TRAP3               8C
TRAP4               90
TRAP5               94
TRAP6               98
TRAP7               9C
TRAP8               A0
TRAP9               A4
TRAP_0              A0191B
UPLOAD              A01592
UPLOAD1             A0197A
UPLOAD2             A015BE
UPLOAD3             A015AC
USER_ADDR           CA
USER_DATA           AA
USER_PC             F0
USER_SR             EA
USER_SS             EC
USER_STACK          1FF4
USER_USP            E6
VECINIT             A0168E
VECINIT1            A01698
VECINIT2            A016A4
VECTABLE            A016B6
VIEW                A01A15
VIEW1               A0160C
VIEW_USP            A015EA
V_FLAG              A01A9F
WAIT_CR             A00E4A
WHAT3               A014F6
WRITE_1             A013B4
X                   A00008
X_FLAG              A01AA8
ZERODIV_MSG         A01A75
ZERO_TO_NINE        A00DD4
Z_FLAG              A01AA2
